{"version":3,"sources":["webpack:///./src/pages/images/errEndEvent.png","webpack:///./src/pages/images/startEvent.png","webpack:///./src/pages/images/intermediateCatchEvent.png","webpack:///./node_modules/core-js/modules/es6.regexp.match.js","webpack:///./src/pages/images/endEvent.png","webpack:///./src/pages/images/eventBasedGateway.png","webpack:///./src/pages/designing/application-deployment.vue?0a31","webpack:///./src/pages/designing/application-deployment.vue?7546","webpack:///src/pages/designing/application-deployment.vue","webpack:///./src/pages/designing/application-deployment.vue?7867","webpack:///./src/pages/designing/application-deployment.vue","webpack:///./src/pages/images/exclusiveGateway.png","webpack:///./src/pages/images/serviceTask.png"],"names":["module","exports","anObject","toLength","advanceStringIndex","regExpExec","defined","MATCH","$match","maybeCallNative","regexp","O","this","fn","undefined","call","RegExp","String","res","done","value","rx","S","global","fullUnicode","unicode","lastIndex","result","A","n","matchStr","content","i","locals","add","default","push","components","PhysicalGraph","data","isShowTabs","systemDesigns","systemDesignVersion","envs","env","currentTab","deployTree","selectedDeployItems","graphSource","graphs","tabList","payload","filters","pageable","pageSize","startIndex","paging","sorting","spinShow","graph","systemData","physicalGraphData","physicalGraphLinks","serviceCiTypeId","invokeCiTypeId","instanceCiTypeId","isDataChanged","physicalSpin","graphTree","layerData","systemTreeData","rankNodes","treeLayerEnumName","treeSpinShow","computed","tableRef","needCheckout","$route","name","envCodeId","find","methods","initADGraph","initEvent","renderADGraph","graphviz","renderDot","nodesString","svg","attr","width","height","genADDOT","found","sysChildren","forEach","label","subsys","code","key_name","dots","guid","Array","isArray","children","unitLabel","unit","state","stateColorMap","has","color","get","graphMap","set","child","ciTypeId","host","hostIp","service","sysIvks","serviceLabel","domain","dns_domain","dns_name","invoke","join","onSystemDesignSelect","key","initTreeGraph","onEnvSelect","onTreeCheck","all","graphCallback","formatTree","map","_","length","title","id","expand","disableCheckbox","orchestration","loadImage","match","genDOT","startEvent","errEndEvent","eventBasedGateway","intermediateCatchEvent","exclusiveGateway","endEvent","serviceTask","raw","addNodeAttr","node","toNodeIds","nodeMap","dot","fromNodeIds","renderGraph","defintiionKey","index","initGraph","on","renderTreeGraph","genTreeDOT","genlayerDot","layerDot","genChildrenDot","concat","genRankNodeDot","Object","keys","handleTabClick","getCurrentData","queryCiAttrs","queryCiData","onSelectedRowsChange","rows","isUpdateableAry","r","nextOperations","isDeleteableAry","val","ci","outerActions","actionType","props","disabled","every","isValueTrue","actionFun","type","exportHandler","addHandler","editHandler","saveHandler","deleteHandler","cancelHandler","$refs","rowCancelHandler","weTableRowId","defaultHandler","sortHandler","asc","order","field","handleSubmit","tableColumns","inputType","emptyRowData","inputKey","tableData","unshift","setAllRowsUneditable","setCheckoutStatus","$Modal","confirm","onOk","onCancel","document","querySelector","click","swapRowEditable","$nextTick","deleteAttr","isAuto","attrs","propertyName","pageChange","pagination","currentPage","current","pageSizeChange","size","getSelectOptions","columns","created","getSystemDesigns","getAllEnvs","getDeployDesignTabs","queryTreeLayerData","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","_v","model","callback","$$v","expression","_l","item","_s","querySysTree","reloadHandler","slot","_e","previewDeploy","definitionName","executeDeploy","ref","refInFor","innerActions","ascOptions","staticRenderFns","injectStyle","context","__vue_template_functional__","__vue_styles__","__vue_scopeId__","__vue_module_identifier__","Component"],"mappings":"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","file":"js/chunk-418fa69d.3e8846e3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/d31581da116d54ba8b9af19940bc69a1.png\";","module.exports = __webpack_public_path__ + \"img/aa97a312eff26038fcd5c2e85aacc48e.png\";","module.exports = __webpack_public_path__ + \"img/51528fbe1d068dc73faeb97fede764ba.png\";","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","module.exports = __webpack_public_path__ + \"img/4e4bbe31b3a2c2985a741e9a2531d8f5.png\";","module.exports = __webpack_public_path__ + \"img/2af2877f77a2b482e5001d8b98d372de.png\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-219c0c25\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../../node_modules/sass-loader/lib/loader.js!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./application-deployment.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-loader/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"23fc7782\", content, true, {});","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#physicalGraph[data-v-219c0c25]{position:relative;min-height:300px}#graphTree[data-v-219c0c25]{position:relative;min-height:calc(50% + 300px)}\", \"\"]);\n\n// exports\n","<template>\r\n  <div>\r\n    <Row class=\"artifact-management\">\r\n      <Col span=\"6\">\r\n        <span style=\"margin-right: 10px\">系统设计</span>\r\n        <Select\r\n          filterable\r\n          @on-change=\"onSystemDesignSelect\"\r\n          v-model=\"systemDesignVersion\"\r\n          label-in-name\r\n          style=\"width: 70%;\"\r\n        >\r\n          <Option\r\n            v-for=\"item in systemDesigns\"\r\n            :value=\"item.guid\"\r\n            :key=\"item.guid\"\r\n            >{{ item.name }}</Option\r\n          >\r\n        </Select>\r\n      </Col>\r\n      <Col span=\"6\" offset=\"1\">\r\n        <span style=\"margin-right: 10px\">环境类型</span>\r\n        <Select\r\n          @on-change=\"onEnvSelect\"\r\n          v-model=\"env\"\r\n          label-in-name\r\n          style=\"width: 70%;\"\r\n        >\r\n          <Option v-for=\"env in envs\" :value=\"env.code || ''\" :key=\"env.code\">\r\n            {{ env.value }}\r\n          </Option>\r\n        </Select>\r\n      </Col>\r\n      <Col span=\"3\" offset=\"1\">\r\n        <Button type=\"info\" @click=\"querySysTree\">查询</Button>\r\n      </Col>\r\n    </Row>\r\n    <hr style=\"margin: 10px 0\" />\r\n    <Tabs\r\n      type=\"card\"\r\n      :value=\"currentTab\"\r\n      :closable=\"false\"\r\n      @on-click=\"handleTabClick\"\r\n    >\r\n      <TabPane label=\"应用逻辑图\" name=\"logic-graph\" :index=\"1\">\r\n        <Alert show-icon closable v-if=\"isDataChanged\">\r\n          Data has beed changed, click Reload button to reload graph.\r\n          <Button slot=\"desc\" @click=\"reloadHandler\">Reload</Button>\r\n        </Alert>\r\n\r\n        <div class=\"graph-container\" id=\"graph\">\r\n          <Spin size=\"large\" fix v-if=\"spinShow\">\r\n            <Icon type=\"ios-loading\" size=\"44\" class=\"spin-icon-load\"></Icon>\r\n            <div>加载中...</div>\r\n          </Spin>\r\n        </div>\r\n      </TabPane>\r\n      <TabPane label=\"应用树状逻辑图\" name=\"logic-tree-graph\" :index=\"2\">\r\n        <Alert show-icon closable v-if=\"isDataChanged\">\r\n          Data has beed changed, click Reload button to reload graph.\r\n          <Button slot=\"desc\" @click=\"reloadHandler\">Reload</Button>\r\n        </Alert>\r\n\r\n        <div class=\"graph-container\" id=\"graphTree\">\r\n          <Spin size=\"large\" fix v-if=\"treeSpinShow\">\r\n            <Icon type=\"ios-loading\" size=\"44\" class=\"spin-icon-load\"></Icon>\r\n            <div>加载中...</div>\r\n          </Spin>\r\n        </div>\r\n      </TabPane>\r\n      <TabPane label=\"物理部署图\" name=\"physicalGraph\" :index=\"3\">\r\n        <div id=\"physicalGraph\">\r\n          <PhysicalGraph\r\n            v-if=\"physicalGraphData.length\"\r\n            :graphData=\"physicalGraphData\"\r\n            :links=\"physicalGraphLinks\"\r\n            :callback=\"graphCallback\"\r\n          ></PhysicalGraph>\r\n          <Spin size=\"large\" fix v-if=\"physicalSpin\">\r\n            <Icon type=\"ios-loading\" size=\"44\" class=\"spin-icon-load\"></Icon>\r\n            <div>加载中...</div>\r\n          </Spin>\r\n        </div>\r\n      </TabPane>\r\n      <TabPane label=\"部署详情\" name=\"deploy-detail\" :index=\"4\">\r\n        <Row style=\"max-height: 500px\">\r\n          <Tree\r\n            :data=\"deployTree\"\r\n            show-checkbox\r\n            multiple\r\n            @on-check-change=\"onTreeCheck\"\r\n            check-strictly\r\n          ></Tree>\r\n        </Row>\r\n        <Row style=\"margin-top: 20px\">\r\n          <Button\r\n            icon=\"md-eye\"\r\n            @click=\"previewDeploy\"\r\n            :disabled=\"this.selectedDeployItems.length < 1\"\r\n            >预览</Button\r\n          >\r\n        </Row>\r\n        <Row>\r\n          <div style=\"overflow-x: auto; display: -webkit-box; margin-top: 20px\">\r\n            <div\r\n              v-for=\"(item, index) in graphSource\"\r\n              :key=\"index\"\r\n              style=\"width: 20%;\"\r\n            >\r\n              <h3 style=\"text-align: center;\">{{ item.definitionName }}</h3>\r\n              <div\r\n                class=\"graph-container\"\r\n                :id=\"`graph_${item.defintiionKey}_${index}`\"\r\n                style=\"text-align: center;margin-top: 20px;\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n        <Row>\r\n          <Button\r\n            icon=\"md-checkmark-circle-outline\"\r\n            type=\"info\"\r\n            @click=\"executeDeploy\"\r\n            :disabled=\"this.selectedDeployItems.length < 1\"\r\n            >执行流程</Button\r\n          >\r\n        </Row>\r\n      </TabPane>\r\n      <TabPane\r\n        v-for=\"(ci, index) in tabList\"\r\n        :key=\"ci.id\"\r\n        :name=\"ci.id\"\r\n        :label=\"ci.name\"\r\n        v-if=\"isShowTabs\"\r\n        :index=\"index + 5\"\r\n      >\r\n        <WeTable\r\n          :tableData=\"ci.tableData\"\r\n          :tableOuterActions=\"ci.outerActions\"\r\n          :tableInnerActions=\"ci.innerActions\"\r\n          :tableColumns=\"ci.tableColumns\"\r\n          :pagination=\"ci.pagination\"\r\n          :ascOptions=\"ci.ascOptions\"\r\n          :showCheckbox=\"needCheckout\"\r\n          :isRefreshable=\"true\"\r\n          @actionFun=\"actionFun\"\r\n          @sortHandler=\"sortHandler\"\r\n          @handleSubmit=\"handleSubmit\"\r\n          @getSelectedRows=\"onSelectedRowsChange\"\r\n          @pageChange=\"pageChange\"\r\n          @pageSizeChange=\"pageSizeChange\"\r\n          tableHeight=\"650\"\r\n          :ref=\"'table' + ci.id\"\r\n        ></WeTable>\r\n      </TabPane>\r\n    </Tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3-selection\";\r\nimport * as d3Graphviz from \"d3-graphviz\";\r\n\r\nimport {\r\n  getDeployCiData,\r\n  getDeployDesignTabs,\r\n  getCiTypeAttributes,\r\n  deleteCiDatas,\r\n  createCiDatas,\r\n  updateCiDatas,\r\n  getSystemDesigns,\r\n  getEnumCodesByCategoryId,\r\n  previewDeployGraph,\r\n  getAllDeployTreesFromDesignCi,\r\n  startProcessInstancesWithCiDataInbatch,\r\n  getAllCITypes,\r\n  operateCiState,\r\n  getApplicationDeploymentDesignDataTree,\r\n  getAllZoneLinkGroupByIdc,\r\n  getAllNonSystemEnumCodes,\r\n  queryEnumCategories,\r\n  queryEnumCodes\r\n} from \"@/api/server.js\";\r\nimport {\r\n  outerActions,\r\n  innerActions,\r\n  pagination,\r\n  components\r\n} from \"@/const/actions.js\";\r\nimport { formatData } from \"../util/format.js\";\r\nconst endEvent = require(\"../images/endEvent.png\");\r\nconst errEndEvent = require(\"../images/errEndEvent.png\");\r\nconst eventBasedGateway = require(\"../images/eventBasedGateway.png\");\r\nconst exclusiveGateway = require(\"../images/exclusiveGateway.png\");\r\nconst intermediateCatchEvent = require(\"../images/intermediateCatchEvent.png\");\r\nconst startEvent = require(\"../images/startEvent.png\");\r\nconst serviceTask = require(\"../images/serviceTask.png\");\r\nimport { getExtraInnerActions } from \"../util/state-operations.js\";\r\nimport PhysicalGraph from \"./physical-graph\";\r\nconst stateColorMap = new Map([\r\n  [\"new\", \"green\"],\r\n  [\"created\", \"green\"],\r\n  [\"update\", \"dodgerblue\"],\r\n  [\"change\", \"dodgerblue\"],\r\n  [\"destroyed\", \"red\"],\r\n  [\"delete\", \"red\"]\r\n]);\r\n\r\nconst colors = [\r\n  \"#E1F5FE\",\r\n  \"#B3E5FC\",\r\n  \"#81D4FA\",\r\n  \"#4FC3F7\",\r\n  \"#29B6F6\",\r\n  \"#0091EA\"\r\n];\r\n\r\nexport default {\r\n  components: {\r\n    PhysicalGraph\r\n  },\r\n  data() {\r\n    return {\r\n      isShowTabs: false,\r\n      systemDesigns: [],\r\n      systemDesignVersion: \"\",\r\n      envs: [],\r\n      env: \"\",\r\n      currentTab: \"logic-graph\",\r\n      deployTree: [],\r\n      selectedDeployItems: [],\r\n      graphSource: [],\r\n      graphs: {},\r\n      tabList: [],\r\n      payload: {\r\n        filters: [],\r\n        pageable: {\r\n          pageSize: 10,\r\n          startIndex: 0\r\n        },\r\n        paging: true,\r\n        sorting: {}\r\n      },\r\n      spinShow: false,\r\n      graph: {},\r\n      systemData: [],\r\n      physicalGraphData: [],\r\n      physicalGraphLinks: [],\r\n      serviceCiTypeId: \"\",\r\n      invokeCiTypeId: \"\",\r\n      instanceCiTypeId: \"\",\r\n      isDataChanged: false,\r\n      physicalSpin: false,\r\n      graphTree: {},\r\n      layerData: [],\r\n      systemTreeData: [],\r\n      rankNodes: {},\r\n      treeLayerEnumName: \"deploy_tree_layer\",\r\n      treeSpinShow: true\r\n    };\r\n  },\r\n  computed: {\r\n    tableRef() {\r\n      return \"table\" + this.currentTab;\r\n    },\r\n    needCheckout() {\r\n      return this.$route.name === \"ciDataEnquiry\" ? false : true;\r\n    },\r\n    envCodeId() {\r\n      return this.envs.find(_ => _.code === this.env).codeId || \"\";\r\n    }\r\n  },\r\n  methods: {\r\n    initADGraph(filters = {}) {\r\n      this.spinShow = true;\r\n      const initEvent = () => {\r\n        let graph = d3.select(\"#graph\");\r\n\r\n        graph\r\n          .on(\"dblclick.zoom\", null)\r\n          .on(\"wheel.zoom\", null)\r\n          .on(\"mousewheel.zoom\", null);\r\n        this.graph.graphviz = graph\r\n          .graphviz()\r\n          .scale(1.2)\r\n          .width(window.innerWidth * 0.96)\r\n          .height(window.innerHeight * 0.8)\r\n          .zoom(true);\r\n      };\r\n\r\n      initEvent();\r\n      this.renderADGraph(this.systemData);\r\n      this.spinShow = false;\r\n    },\r\n    renderADGraph(data) {\r\n      let nodesString = this.genADDOT(data);\r\n      this.graph.graphviz.renderDot(nodesString);\r\n      let svg = d3.select(\"#graph\").select(\"svg\");\r\n      let width = svg.attr(\"width\");\r\n      let height = svg.attr(\"height\");\r\n      svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height);\r\n    },\r\n    genADDOT(data) {\r\n      let sysChildren = data || [];\r\n      let sysIvks = [];\r\n      let width = 16;\r\n      let height = 12;\r\n      const found = this.systemDesigns.find(\r\n        sys => this.systemDesignVersion === sys.guid\r\n      );\r\n      if (!found) return \"digraph G {}\";\r\n      let sysLabel = (found && found.code) || \"SYS\";\r\n      let graphMap = new Map();\r\n      let dots = [\r\n        \"digraph G{\",\r\n        \"rankdir=LR nodesep=0.5;\",\r\n        'size = \"' + width + \",\" + height + '\";',\r\n        \"subgraph cluster_\" +\r\n          found.guid +\r\n          '{ label=\"' +\r\n          sysLabel +\r\n          '\";tooltip=\"' +\r\n          found.description +\r\n          '\";'\r\n      ];\r\n      sysChildren.forEach(subsys => {\r\n        let label;\r\n        if (\r\n          subsys.data.code &&\r\n          subsys.data.code !== null &&\r\n          subsys.data.code !== \"\"\r\n        ) {\r\n          label = subsys.data.code;\r\n        } else {\r\n          label = subsys.data.key_name;\r\n        }\r\n        dots.push(\"subgraph cluster_\" + subsys.guid + \"{\");\r\n        dots.push(`label=\"${label}\";tooltip=\"${subsys.data.description}\";`);\r\n        if (Array.isArray(subsys.children)) {\r\n          subsys.children.forEach(unit => {\r\n            let unitLabel;\r\n            if (\r\n              unit.data.code &&\r\n              unit.data.code !== null &&\r\n              unit.data.code !== \"\"\r\n            ) {\r\n              unitLabel = unit.data.code;\r\n            } else {\r\n              unitLabel = unit.data.key_name;\r\n            }\r\n            let color = \"grey\";\r\n            if (unit.data.state && stateColorMap.has(unit.data.state.code)) {\r\n              color = stateColorMap.get(unit.data.state.code);\r\n            }\r\n            dots.push(\"subgraph cluster_\" + unit.guid + \"{\");\r\n            dots.push(\r\n              `label=\"${unitLabel}\"; style=filled; color=${color};tooltip=\"${\r\n                unit.data.description\r\n              }\"`\r\n            );\r\n            dots.push(`\"${unit.guid}\"[shape=\"none\",`);\r\n            dots.push(\r\n              `label=<<TABLE BORDER=\"0\" CELLBORDER=\"1\" CELLSPACING=\"0\">\\n<TR><TD COLSPAN=\"2\"> ${unitLabel} </TD></TR>`\r\n            );\r\n            graphMap.set(unit.guid, unitLabel);\r\n            if (Array.isArray(unit.children)) {\r\n              unit.children.forEach(child => {\r\n                if (child.ciTypeId === this.instanceCiTypeId) {\r\n                  let hostIp = \"\";\r\n                  if (child.data.host && child.data.host.key_name) {\r\n                    hostIp = child.data.host.key_name;\r\n                  }\r\n                  dots.push(\r\n                    `<TR><TD> ${hostIp} </TD><TD>${child.data.port}</TD></TR>`\r\n                  );\r\n                }\r\n              });\r\n            }\r\n            dots.push(unit.data.key_name + \"</TABLE>>]\");\r\n            if (Array.isArray(unit.children)) {\r\n              unit.children.forEach(service => {\r\n                if (service.ciTypeId === this.invokeCiTypeId) {\r\n                  sysIvks.push(service);\r\n                }\r\n                if (service.ciTypeId === this.serviceCiTypeId) {\r\n                  let serviceLabel;\r\n                  if (\r\n                    service.data.code &&\r\n                    service.data.code !== null &&\r\n                    service.data.code !== \"\"\r\n                  ) {\r\n                    serviceLabel = service.data.code;\r\n                  } else {\r\n                    serviceLabel = service.data.key_name;\r\n                  }\r\n                  let domain = \"\";\r\n                  if (service.data.dns_domain) {\r\n                    domain =\r\n                      service.data.dns_name + service.data.dns_domain.value;\r\n                  } else {\r\n                    domain = service.data.dns_name;\r\n                  }\r\n                  let ip = service.data.ip ? service.data.ip : \"\";\r\n                  dots.push(\r\n                    `\"${\r\n                      service.guid\r\n                    }\" [shape=\"record\", label=\"{{ ${serviceLabel}|{ ${domain} | ${\r\n                      service.data.service_port\r\n                    } }| ${ip} }}\", tooltip=\"${service.data.description}\"];`\r\n                  );\r\n                  graphMap.set(service.guid, serviceLabel);\r\n                  dots.push(\r\n                    `\"${service.guid}\" ->\"${unit.guid}\" [arrowhead=\"t\"];`\r\n                  );\r\n                }\r\n              });\r\n            }\r\n            dots.push(\"} \");\r\n          });\r\n        }\r\n        dots.push(\"} \");\r\n      });\r\n      dots.push(\"} \");\r\n\r\n      sysIvks.forEach(invoke => {\r\n        let color = \"grey\";\r\n        if (invoke.data.state && stateColorMap.has(invoke.data.state.code)) {\r\n          color = stateColorMap.get(invoke.data.state.code);\r\n        }\r\n\r\n        dots.push(\r\n          '\"' +\r\n            invoke.data.unit.guid +\r\n            '\"' +\r\n            \"->\" +\r\n            '\"' +\r\n            invoke.data.service.guid +\r\n            '\"' +\r\n            '[id=\"' +\r\n            invoke.guid +\r\n            '\"' +\r\n            ',color=\"' +\r\n            color +\r\n            '\"' +\r\n            \"];\"\r\n        );\r\n        if (!graphMap.has(invoke.data.unit.guid)) {\r\n          dots.push(\r\n            '\"' +\r\n              invoke.data.unit.guid +\r\n              '\"' +\r\n              '[label=\"' +\r\n              invoke.data.unit.key_name +\r\n              '\"];'\r\n          );\r\n        }\r\n        if (!graphMap.has(invoke.data.service.guid)) {\r\n          dots.push(\r\n            '\"' +\r\n              invoke.data.service.guid +\r\n              '\"' +\r\n              '[label=\"' +\r\n              invoke.data.service.key_name +\r\n              '\"];'\r\n          );\r\n        }\r\n      });\r\n      dots.push(\"}\");\r\n      return dots.join(\"\");\r\n    },\r\n    async reloadHandler() {\r\n      this.querySysTree();\r\n      this.isDataChanged = false;\r\n    },\r\n\r\n    onSystemDesignSelect(key) {\r\n      this.systemDesignVersion = key;\r\n      this.isShowTabs = false;\r\n      this.deployTree = [];\r\n      this.systemData = [];\r\n      this.systemTreeData = [];\r\n      this.initADGraph();\r\n      this.initTreeGraph();\r\n    },\r\n    onEnvSelect(key) {\r\n      this.env = key;\r\n      this.isShowTabs = false;\r\n      this.deployTree = [];\r\n      this.systemData = [];\r\n      this.systemTreeData = [];\r\n      this.initADGraph();\r\n      this.initTreeGraph();\r\n    },\r\n    async getSystemDesigns() {\r\n      let { status, data, message } = await getSystemDesigns();\r\n      if (status === \"OK\") {\r\n        this.systemDesigns = data.contents.map(_ => _.data);\r\n      }\r\n    },\r\n    async getAllEnvs() {\r\n      const payload = {\r\n        filters: [{ name: \"cat.catName\", operator: \"eq\", value: \"env\" }],\r\n        paging: false\r\n      };\r\n      const { status, data, message } = await getAllNonSystemEnumCodes(payload);\r\n\r\n      if (status === \"OK\") {\r\n        this.envs = data.contents;\r\n      }\r\n    },\r\n    onTreeCheck(all, current) {\r\n      this.selectedDeployItems = all;\r\n    },\r\n    async querySysTree() {\r\n      if (!this.systemDesignVersion || !this.env) {\r\n        this.$Notice.warning({\r\n          title: \"Warning\",\r\n          desc: \"请先选择系统设计和环境类型\"\r\n        });\r\n        return;\r\n      }\r\n      this.spinShow = true;\r\n      this.treeSpinShow = true;\r\n      let { status, message, data } = await getAllCITypes();\r\n      if (status === \"OK\") {\r\n        data.forEach(ci => {\r\n          if (ci.tableName === \"service\") {\r\n            this.serviceCiTypeId = ci.ciTypeId;\r\n          }\r\n          if (ci.tableName === \"invoke\") {\r\n            this.invokeCiTypeId = ci.ciTypeId;\r\n          }\r\n          if (ci.tableName === \"running_instance\") {\r\n            this.instanceCiTypeId = ci.ciTypeId;\r\n          }\r\n        });\r\n      }\r\n      this.physicalSpin = true;\r\n      this.getAllDeployTreesFromDesignCi();\r\n      this.getPhysicalGraphData();\r\n    },\r\n    async getAllDeployTreesFromDesignCi() {\r\n      const { status, message, data } = await getAllDeployTreesFromDesignCi(\r\n        this.systemDesignVersion,\r\n        this.env\r\n      );\r\n      if (status === \"OK\") {\r\n        this.isShowTabs = true;\r\n        this.deployTree = this.formatTree(data);\r\n        this.systemData = data;\r\n        this.initADGraph();\r\n        const found = this.systemDesigns.find(\r\n          sys => this.systemDesignVersion === sys.guid\r\n        );\r\n        if (found) {\r\n          let systemTreeData = {\r\n            guid: this.systemDesignVersion,\r\n            children: data,\r\n            data: {\r\n              code: found.code\r\n            }\r\n          };\r\n          this.systemTreeData = [];\r\n          this.systemTreeData.push(systemTreeData);\r\n          this.initTreeGraph();\r\n        }\r\n      }\r\n    },\r\n    async getPhysicalGraphData() {\r\n      this.physicalGraphData = [];\r\n      const promiseArray = [\r\n        getApplicationDeploymentDesignDataTree(\r\n          this.systemDesignVersion,\r\n          this.envCodeId\r\n        ),\r\n        getAllZoneLinkGroupByIdc()\r\n      ];\r\n      const [graphData, links] = await Promise.all(promiseArray);\r\n      if (graphData.status === \"OK\") {\r\n        if (graphData.data.length) {\r\n          this.physicalGraphData = graphData.data;\r\n        } else {\r\n          this.physicalGraphData = [];\r\n          this.physicalSpin = false;\r\n        }\r\n      }\r\n      if (links.status === \"OK\") {\r\n        this.physicalGraphLinks = links.data || [];\r\n      }\r\n    },\r\n    graphCallback() {\r\n      this.physicalSpin = false;\r\n    },\r\n    formatTree(data) {\r\n      return data.map(_ => {\r\n        if (_.children && _.children.length > 0) {\r\n          return {\r\n            ..._,\r\n\r\n            title: _.data.key_name,\r\n            id: _.guid,\r\n            expand: true,\r\n            disableCheckbox: !_.data.orchestration,\r\n            children: this.formatTree(_.children)\r\n          };\r\n        } else {\r\n          return {\r\n            ..._,\r\n            title: _.data.key_name,\r\n            id: _.guid,\r\n            expand: true,\r\n            disableCheckbox: !_.data.orchestration\r\n          };\r\n        }\r\n      });\r\n    },\r\n    async executeDeploy() {\r\n      let payload = {\r\n        attach: {\r\n          attachItems: [\r\n            {\r\n              filterName: \"systemDesignVersion\",\r\n              filterValue: this.systemDesignVersion\r\n            },\r\n            {\r\n              filterName: \"env\",\r\n              filterValue: this.env\r\n            }\r\n          ]\r\n        },\r\n        requests: this.selectedDeployItems.map(_ => {\r\n          return {\r\n            ciDataId: _.guid,\r\n            ciTypeId: _.ciTypeId,\r\n            processDefinitionKey: _.data.orchestration.codeId\r\n          };\r\n        })\r\n      };\r\n      const {\r\n        status,\r\n        data,\r\n        message\r\n      } = await startProcessInstancesWithCiDataInbatch(payload);\r\n      if (status === \"OK\") {\r\n        this.$Notice.success({\r\n          title: \"开始执行\",\r\n          desc: message\r\n        });\r\n      }\r\n    },\r\n    async previewDeploy() {\r\n      let payload = this.selectedDeployItems.map(_ => {\r\n        return {\r\n          ciGuid: _.guid,\r\n          ciTypeId: _.ciTypeId,\r\n          definitionKey: _.data.orchestration.codeId\r\n        };\r\n      });\r\n      const { status, data, message } = await previewDeployGraph(payload);\r\n      if (status === \"OK\") {\r\n        this.graphSource = data;\r\n        data.forEach((_, index) => {\r\n          this.$set(this.graphs, _.defintiionKey + \"_\" + index, {});\r\n        });\r\n        this.$nextTick(() => {\r\n          this.initGraph();\r\n        });\r\n      }\r\n    },\r\n    loadImage(index, nodesString) {\r\n      (nodesString.match(/image=[^,]*(img\\/\\d*|png)/g) || [])\r\n        .filter((value, index, self) => {\r\n          return self.indexOf(value) === index;\r\n        })\r\n        .map(keyvaluepaire => keyvaluepaire.substr(7))\r\n        .forEach(image => {\r\n          this.graphs[index].graphviz.addImage(image, \"48px\", \"48px\");\r\n        });\r\n    },\r\n    genDOT(raw) {\r\n      const shapes = {\r\n        startEvent,\r\n        errEndEvent,\r\n        eventBasedGateway,\r\n        intermediateCatchEvent,\r\n        exclusiveGateway,\r\n        endEvent,\r\n        serviceTask\r\n      };\r\n      var dots = [\r\n        \"digraph  {\",\r\n        'bgcolor=\"transparent\";',\r\n        'Node [fontname=Arial,shape=\"none\",width=\"0.8\", height=\"0.8\", color=\"#273c75\" ,fontsize=10];',\r\n        'Edge [fontname=Arial, minlen=\"1\", color=\"#000\", fontsize=10];'\r\n      ];\r\n      let drawConnection = (from, to) => {\r\n        return `\"${from.id}\" -> \"${to.id}\"[edgetooltip=\"${to.name}\"];`;\r\n      };\r\n      let addNodeAttr = node => {\r\n        const color = \"#273c75\";\r\n        let path = `${shapes[node.nodeTypeName] || shapes.startEvent}`;\r\n        return `\"${node.id}\" [image=\"${path}\" label=\"${\r\n          node.name\r\n        }\" labelloc=\"b\", fontcolor=\"${color}\"];`;\r\n      };\r\n      const nodeMap = new Map();\r\n      raw.forEach(node => {\r\n        dots.push(addNodeAttr(node));\r\n        if (node.toNodeIds.length) {\r\n          node.toNodeIds.forEach(toId => {\r\n            let found = raw.find(_ => toId === _.id);\r\n            if (found) {\r\n              const dot = drawConnection(node, found);\r\n              if (!nodeMap.has(dot)) {\r\n                dots.push(dot);\r\n                nodeMap.set(dot, true);\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n        if (node.fromNodeIds.length) {\r\n          node.fromNodeIds.forEach(fromId => {\r\n            let found = raw.find(_ => fromId === _.id);\r\n            if (found) {\r\n              const dot = drawConnection(found, node);\r\n              if (!nodeMap.has(dot)) {\r\n                dots.push(dot);\r\n                nodeMap.set(dot, true);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      dots.push(\"}\");\r\n      return dots.join(\"\");\r\n    },\r\n    renderGraph(data, index) {\r\n      let nodesString = this.genDOT(data.flowNodes || []);\r\n      this.loadImage(data.defintiionKey + \"_\" + index, nodesString);\r\n      this.graphs[data.defintiionKey + \"_\" + index].graphviz.renderDot(\r\n        nodesString\r\n      );\r\n    },\r\n    initGraph() {\r\n      const initEvent = () => {\r\n        this.graphSource.forEach((item, index) => {\r\n          let graph;\r\n          graph = d3.select(\"#graph_\" + item.defintiionKey + \"_\" + index);\r\n          graph.on(\"dblclick.zoom\", null);\r\n          this.graphs[\r\n            item.defintiionKey + \"_\" + index\r\n          ].graphviz = graph.graphviz().zoom(false);\r\n        });\r\n      };\r\n\r\n      initEvent();\r\n      this.graphSource.forEach((_, index) => {\r\n        this.renderGraph(_, index);\r\n      });\r\n    },\r\n    initTreeGraph(filters = {}) {\r\n      this.treeSpinShow = true;\r\n      let graph;\r\n      const initEvent = () => {\r\n        graph = d3.select(\"#graphTree\");\r\n        graph\r\n          .on(\"dblclick.zoom\", null)\r\n          .on(\"wheel.zoom\", null)\r\n          .on(\"mousewheel.zoom\", null);\r\n        this.graphTree.graphviz = graph\r\n          .graphviz()\r\n          .scale(1.2)\r\n          .width(window.innerWidth * 0.96)\r\n          .height(window.innerHeight * 0.8)\r\n          .zoom(true);\r\n      };\r\n\r\n      initEvent();\r\n      this.renderTreeGraph(this.systemTreeData);\r\n      this.treeSpinShow = false;\r\n    },\r\n    renderTreeGraph(data) {\r\n      let nodesString = this.genTreeDOT(data);\r\n      this.graphTree.graphviz.renderDot(nodesString);\r\n      let svg = d3.select(\"#graphTree\").select(\"svg\");\r\n      let width = svg.attr(\"width\");\r\n      let height = svg.attr(\"height\");\r\n      svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height);\r\n    },\r\n    genTreeDOT(data) {\r\n      if (data.length === 0) {\r\n        return \"digraph G {}\";\r\n      }\r\n      const width = 16;\r\n      const height = 12;\r\n      let dots = [\r\n        \"digraph G{\",\r\n        \"rankdir=TB nodesep=0.5;\",\r\n        `size=\"${width},${height}\";`,\r\n        ...this.genlayerDot(this.layerData),\r\n        \"Node [fontname=Arial, fontsize=12];\",\r\n        'Edge [fontname=Arial, minlen=\"2\",fontsize=10, arrowhead = \"t\"];',\r\n        ...this.genChildrenDot(data || [], 1),\r\n        ...this.genRankNodeDot(),\r\n        \"}\"\r\n      ];\r\n      return dots.join(\" \");\r\n    },\r\n    genlayerDot(data) {\r\n      let layerDot = [];\r\n      layerDot.push(\"{\");\r\n      layerDot.push(\"node [shape=plaintext, fontsize=16];\");\r\n      data.forEach((element, index) => {\r\n        if (index === data.length - 1) {\r\n          layerDot.push(`${element.value}`);\r\n        } else {\r\n          layerDot.push(`${element.value} -> `);\r\n        }\r\n        this.rankNodes[index + 1] = [];\r\n        this.rankNodes[index + 1].push(element.value);\r\n      });\r\n      layerDot.push(\" [style=invis]\");\r\n      layerDot.push(\"}\");\r\n      return layerDot;\r\n    },\r\n    genChildrenDot(data, level) {\r\n      let dots = [];\r\n      data.forEach(_ => {\r\n        if (_.ciTypeId === 9) {\r\n          dots = dots.concat([\r\n            `\"${_.data.service.guid}\"`,\r\n            `[id=\"n_${_.data.service.guid}\";`,\r\n            `label=\"${_.data.service.code || _.data.service.key_name}\";`,\r\n            \"shape=ellipse;\",\r\n            `style=\"filled\";color=\"${colors[level]}\";`,\r\n            `tooltip=\"${_.data.service.description || \"-\"}\"];`\r\n          ]);\r\n        } else {\r\n          dots = dots.concat([\r\n            `\"${_.guid}\"`,\r\n            `[id=\"n_${_.guid}\";`,\r\n            `label=\"${_.data.code || _.data.key_name}\";`,\r\n            \"shape=ellipse;\",\r\n            `style=\"filled\";color=\"${colors[level]}\";`,\r\n            `tooltip=\"${_.data.description || \"-\"}\"];`\r\n          ]);\r\n        }\r\n        this.rankNodes[level].push(`\"${_.guid}\"`);\r\n        if (_.children instanceof Array && _.children.length) {\r\n          dots = dots.concat(this.genChildrenDot(_.children, level + 1));\r\n          _.children.forEach(c => {\r\n            dots = dots.concat([`\"${_.guid}\" -> \"${c.guid}\";`]);\r\n          });\r\n        }\r\n      });\r\n      return dots;\r\n    },\r\n    genRankNodeDot() {\r\n      let dot = [];\r\n      Object.keys(this.rankNodes).forEach(key => {\r\n        dot = dot.concat([`{rank=same;`, this.rankNodes[key].join(\";\"), `;}`]);\r\n      });\r\n      return dot;\r\n    },\r\n    async queryTreeLayerData() {\r\n      let request = {\r\n        filters: [\r\n          {\r\n            name: \"catName\",\r\n            operator: \"eq\",\r\n            value: this.treeLayerEnumName\r\n          }\r\n        ]\r\n      };\r\n      const { status, message, data } = await queryEnumCategories(request);\r\n      if (status === \"OK\") {\r\n        let catId = data.contents[0].catId;\r\n        const response = await queryEnumCodes(0, catId, {});\r\n        if (response.status === \"OK\") {\r\n          this.layerData = response.data.contents;\r\n        }\r\n      }\r\n    },\r\n    handleTabClick(name) {\r\n      this.payload.filters = [];\r\n      this.currentTab = name;\r\n      if (\r\n        this.currentTab !== \"logic-graph\" &&\r\n        this.currentTab !== \"deploy-detail\" &&\r\n        this.currentTab !== \"physicalGraph\" &&\r\n        this.currentTab !== \"logic-tree-graph\"\r\n      ) {\r\n        this.getCurrentData();\r\n      }\r\n    },\r\n    getCurrentData() {\r\n      this.queryCiAttrs(this.currentTab);\r\n      this.queryCiData();\r\n    },\r\n    onSelectedRowsChange(rows, checkoutBoxdisable) {\r\n      if (rows.length > 0) {\r\n        let isUpdateableAry = [];\r\n        let isDeleteableAry = [];\r\n\r\n        rows.forEach((r, index) => {\r\n          isUpdateableAry.push(!!r.nextOperations.find(op => op === \"update\"));\r\n          isDeleteableAry.push(!!r.nextOperations.find(op => op === \"delete\"));\r\n        });\r\n        let isValueTrue = val => {\r\n          return val === true;\r\n        };\r\n\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.outerActions.forEach(_ => {\r\n              switch (_.actionType) {\r\n                case \"add\":\r\n                  _.props.disabled = _.actionType === \"add\";\r\n                  break;\r\n                case \"edit\":\r\n                  _.props.disabled = !isUpdateableAry.every(isValueTrue);\r\n                  break;\r\n                case \"delete\":\r\n                  _.props.disabled = !isDeleteableAry.every(isValueTrue);\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.outerActions.forEach(_ => {\r\n              _.props.disabled = !(\r\n                _.actionType === \"add\" ||\r\n                _.actionType === \"export\" ||\r\n                _.actionType === \"cancel\"\r\n              );\r\n            });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    actionFun(type, data) {\r\n      switch (type) {\r\n        case \"export\":\r\n          this.exportHandler();\r\n          break;\r\n        case \"add\":\r\n          this.addHandler();\r\n          break;\r\n        case \"edit\":\r\n          this.editHandler();\r\n          break;\r\n        case \"save\":\r\n          this.saveHandler(data);\r\n          break;\r\n        case \"delete\":\r\n          this.deleteHandler(data);\r\n          break;\r\n        case \"cancel\":\r\n          this.cancelHandler();\r\n          break;\r\n        case \"innerCancel\":\r\n          this.$refs[this.tableRef][0].rowCancelHandler(data.weTableRowId);\r\n          break;\r\n        default:\r\n          this.defaultHandler(type, data);\r\n          break;\r\n      }\r\n    },\r\n    sortHandler(data) {\r\n      this.payload.sorting = {\r\n        asc: data.order === \"asc\",\r\n        field: data.key\r\n      };\r\n      this.getCurrentData();\r\n    },\r\n    handleSubmit(data) {\r\n      this.payload.filters = data;\r\n      this.getCurrentData();\r\n    },\r\n    async defaultHandler(type, row) {\r\n      const { data, status, message } = await operateCiState(\r\n        this.currentTab,\r\n        row.guid,\r\n        type\r\n      );\r\n      if (status === \"OK\") {\r\n        this.$Notice.success({\r\n          title: type,\r\n          desc: message\r\n        });\r\n        this.queryCiData();\r\n      }\r\n    },\r\n\r\n    addHandler() {\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          let emptyRowData = {};\r\n          ci.tableColumns.forEach(_ => {\r\n            if (_.inputType === \"multiSelect\" || _.inputType === \"multiRef\") {\r\n              emptyRowData[_.inputKey] = [];\r\n            } else {\r\n              emptyRowData[_.inputKey] = \"\";\r\n            }\r\n          });\r\n          emptyRowData[\"isRowEditable\"] = true;\r\n          emptyRowData[\"isNewAddedRow\"] = true;\r\n          emptyRowData[\"weTableRowId\"] = 1;\r\n          emptyRowData[\"nextOperations\"] = [];\r\n\r\n          ci.tableData.unshift(emptyRowData);\r\n          this.$nextTick(() => {\r\n            this.$refs[this.tableRef][0].pushNewAddedRowToSelections();\r\n            this.$refs[this.tableRef][0].setCheckoutStatus(true);\r\n          });\r\n          ci.outerActions.forEach(_ => {\r\n            _.props.disabled = _.actionType === \"add\";\r\n          });\r\n        }\r\n      });\r\n    },\r\n    cancelHandler() {\r\n      this.$refs[this.tableRef][0].setAllRowsUneditable();\r\n      this.$refs[this.tableRef][0].setCheckoutStatus();\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          ci.outerActions.forEach(_ => {\r\n            _.props.disabled = !(\r\n              _.actionType === \"add\" ||\r\n              _.actionType === \"export\" ||\r\n              _.actionType === \"cancel\"\r\n            );\r\n          });\r\n        }\r\n      });\r\n    },\r\n    deleteHandler(deleteData) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除？\",\r\n        \"z-index\": 1000000,\r\n        onOk: async () => {\r\n          const payload = {\r\n            id: this.currentTab,\r\n            deleteData: deleteData.map(_ => _.guid)\r\n          };\r\n          const { status, message, data } = await deleteCiDatas(payload);\r\n          if (status === \"OK\") {\r\n            this.$Notice.success({\r\n              title: \"Delete data Success\",\r\n              desc: message\r\n            });\r\n            this.isDataChanged = true;\r\n            this.tabList.forEach(ci => {\r\n              if (ci.id === this.currentTab) {\r\n                ci.outerActions.forEach(_ => {\r\n                  _.props.disabled =\r\n                    _.actionType === \"save\" ||\r\n                    _.actionType === \"edit\" ||\r\n                    _.actionType === \"delete\";\r\n                });\r\n              }\r\n            });\r\n            this.getCurrentData();\r\n          }\r\n        },\r\n        onCancel: () => {}\r\n      });\r\n      document.querySelector(\".ivu-modal-mask\").click();\r\n    },\r\n    editHandler() {\r\n      this.$refs[this.tableRef][0].swapRowEditable(true);\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          ci.outerActions.forEach(_ => {\r\n            if (_.actionType === \"save\") {\r\n              _.props.disabled = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      this.$nextTick(() => {\r\n        this.$refs[this.tableRef][0].setCheckoutStatus(true);\r\n      });\r\n    },\r\n    deleteAttr() {\r\n      let attrs = [];\r\n      const found = this.tabList.find(_ => _.id === this.currentTab);\r\n      found.tableColumns.forEach(i => {\r\n        if (i.isAuto) {\r\n          attrs.push(i.propertyName);\r\n        }\r\n      });\r\n      return attrs;\r\n    },\r\n    async saveHandler(data) {\r\n      let setBtnsStatus = () => {\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.outerActions.forEach(_ => {\r\n              _.props.disabled = !(\r\n                _.actionType === \"add\" || _.actionType === \"export\"\r\n              );\r\n            });\r\n          }\r\n        });\r\n        this.$refs[this.tableRef][0].setAllRowsUneditable();\r\n        this.$nextTick(() => {\r\n          /* to get iview original data to set _ischecked flag */\r\n          let objData = this.$refs[this.tableRef][0].$refs.table.$refs.tbody\r\n            .objData;\r\n          for (let obj in objData) {\r\n            objData[obj]._isChecked = false;\r\n            objData[obj]._isDisabled = false;\r\n          }\r\n        });\r\n      };\r\n\r\n      let d = JSON.parse(JSON.stringify(data));\r\n      let addAry = d.filter(_ => _.isNewAddedRow);\r\n      let editAry = d.filter(_ => !_.isNewAddedRow);\r\n      if (addAry.length > 0) {\r\n        const deleteAttrs = this.deleteAttr();\r\n        addAry.forEach(_ => {\r\n          deleteAttrs.forEach(attr => {\r\n            delete _[attr];\r\n          });\r\n          delete _.isRowEditable;\r\n          delete _.weTableForm;\r\n          delete _.weTableRowId;\r\n          delete _.isNewAddedRow;\r\n          delete _.nextOperations;\r\n        });\r\n        let found = this.tabList.find(i => i.id === this.currentTab);\r\n        let payload = {\r\n          id: found && found.code,\r\n          createData: addAry\r\n        };\r\n        const { status, message, data } = await createCiDatas(payload);\r\n        if (status === \"OK\") {\r\n          this.$Notice.success({\r\n            title: \"Add data Success\",\r\n            desc: message\r\n          });\r\n          this.isDataChanged = true;\r\n          setBtnsStatus();\r\n          this.getCurrentData();\r\n        }\r\n      }\r\n      if (editAry.length > 0) {\r\n        editAry.forEach(_ => {\r\n          delete _.isRowEditable;\r\n          delete _.weTableForm;\r\n          delete _.weTableRowId;\r\n          delete _.isNewAddedRow;\r\n          delete _.nextOperations;\r\n        });\r\n\r\n        let found = this.tabList.find(i => i.id === this.currentTab);\r\n\r\n        let payload = {\r\n          id: found && found.code,\r\n          updateData: editAry\r\n        };\r\n        const { status, message, data } = await updateCiDatas(payload);\r\n        if (status === \"OK\") {\r\n          this.$Notice.success({\r\n            title: \"Update data Success\",\r\n            desc: message\r\n          });\r\n          this.isDataChanged = true;\r\n          setBtnsStatus();\r\n          this.getCurrentData();\r\n        }\r\n      }\r\n    },\r\n    async exportHandler() {\r\n      let found = this.tabList.find(i => i.code === this.currentTab);\r\n      let requst = {\r\n        codeId: found.codeId,\r\n        envCode: this.env,\r\n        systemDesignGuid: this.systemDesignVersion\r\n      };\r\n\r\n      let exportPayload = {\r\n        ...this.payload,\r\n        paging: false\r\n      };\r\n      const { status, message, data } = await getDeployCiData(\r\n        requst,\r\n        exportPayload\r\n      );\r\n      if (status === \"OK\") {\r\n        this.$refs[this.tableRef][0].export({\r\n          filename: \"Ci Data\",\r\n          data: formatData(data.contents.map(_ => _.data))\r\n        });\r\n      }\r\n    },\r\n    pageChange(current) {\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          ci.pagination.currentPage = current;\r\n        }\r\n      });\r\n      this.getCurrentData();\r\n    },\r\n    pageSizeChange(size) {\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          ci.pagination.pageSize = size;\r\n        }\r\n      });\r\n      this.getCurrentData();\r\n    },\r\n    async queryCiAttrs(id) {\r\n      const { status, message, data } = await getCiTypeAttributes(id);\r\n      let columns = [];\r\n      const disabledCol = [\r\n        \"created_date\",\r\n        \"updated_date\",\r\n        \"created_by\",\r\n        \"updated_by\",\r\n        \"key_name\",\r\n        \"guid\"\r\n      ];\r\n      if (status === \"OK\") {\r\n        let columns = [];\r\n        data.forEach(_ => {\r\n          const disEditor = disabledCol.find(i => i === _.propertyName);\r\n          let renderKey = _.propertyName;\r\n          if (_.status !== \"decommissioned\" && _.status !== \"notCreated\") {\r\n            columns.push({\r\n              ..._,\r\n              title: _.name,\r\n              key: renderKey,\r\n              inputKey: _.propertyName,\r\n              inputType: _.inputType,\r\n              referenceId: _.referenceId,\r\n              disEditor: !_.isEditable,\r\n              disAdded: !_.isEditable,\r\n              placeholder: _.name,\r\n              component: \"Input\",\r\n              ciType: { id: _.referenceId, name: _.name },\r\n              type: \"text\",\r\n              ...components[_.inputType]\r\n            });\r\n          }\r\n        });\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.tableColumns = this.getSelectOptions(columns);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    getSelectOptions(columns) {\r\n      columns.forEach(async _ => {\r\n        if (_.inputType === \"select\") {\r\n          const { status, message, data } = await getEnumCodesByCategoryId(\r\n            0,\r\n            _.referenceId\r\n          );\r\n          _[\"options\"] = data\r\n            .filter(j => j.status === \"active\")\r\n            .map(i => {\r\n              return {\r\n                label: i.value,\r\n                value: i.codeId\r\n              };\r\n            });\r\n        }\r\n      });\r\n      return columns;\r\n    },\r\n\r\n    async queryCiData() {\r\n      if (this.env === \"\" || this.systemDesignVersion === \"\") {\r\n        this.$Notice.warning({\r\n          title: \"Warning\",\r\n          desc: \"请先选择系统设计和环境类型\"\r\n        });\r\n        return;\r\n      }\r\n      this.payload.pageable.pageSize = 10;\r\n      this.payload.pageable.startIndex = 0;\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          this.payload.pageable.pageSize = ci.pagination.pageSize;\r\n          this.payload.pageable.startIndex =\r\n            (ci.pagination.currentPage - 1) * ci.pagination.pageSize;\r\n        }\r\n      });\r\n      let found = this.tabList.find(i => i.code === this.currentTab);\r\n      let requst = {\r\n        codeId: found.codeId,\r\n        envCode: this.env,\r\n        systemDesignGuid: this.systemDesignVersion\r\n      };\r\n\r\n      const { status, message, data } = await getDeployCiData(\r\n        requst,\r\n        this.payload\r\n      );\r\n      if (status === \"OK\") {\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.tableData = data\r\n              ? data.contents.map(_ => {\r\n                  return {\r\n                    ..._.data,\r\n                    nextOperations: _.meta.nextOperations || []\r\n                  };\r\n                })\r\n              : [];\r\n            ci.pagination.total = data ? data.pageInfo.totalRows : 0;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    async getDeployDesignTabs() {\r\n      const { status, message, data } = await getDeployDesignTabs();\r\n      if (status === \"OK\") {\r\n        let allInnerActions = await getExtraInnerActions();\r\n        if (status === \"OK\") {\r\n          this.tabList = data.map(_ => {\r\n            return {\r\n              ..._,\r\n              name: _.value,\r\n              id: _.code,\r\n              tableData: [],\r\n              tableColumns: [],\r\n              outerActions: JSON.parse(JSON.stringify(outerActions)),\r\n              innerActions: JSON.parse(\r\n                JSON.stringify(innerActions.concat(allInnerActions))\r\n              ),\r\n              pagination: JSON.parse(JSON.stringify(pagination)),\r\n              ascOptions: {}\r\n            };\r\n          });\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getSystemDesigns();\r\n    this.getAllEnvs();\r\n    this.getDeployDesignTabs();\r\n    this.queryTreeLayerData();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#physicalGraph {\r\n  position: relative;\r\n  min-height: 300px;\r\n}\r\n#graphTree {\r\n  position: relative;\r\n  min-height: calc(50% + 300px);\r\n}\r\n</style>\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Row',{staticClass:\"artifact-management\"},[_c('Col',{attrs:{\"span\":\"6\"}},[_c('span',{staticStyle:{\"margin-right\":\"10px\"}},[_vm._v(\"系统设计\")]),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"70%\"},attrs:{\"filterable\":\"\",\"label-in-name\":\"\"},on:{\"on-change\":_vm.onSystemDesignSelect},model:{value:(_vm.systemDesignVersion),callback:function ($$v) {_vm.systemDesignVersion=$$v},expression:\"systemDesignVersion\"}},_vm._l((_vm.systemDesigns),function(item){return _c('Option',{key:item.guid,attrs:{\"value\":item.guid}},[_vm._v(_vm._s(item.name))])}),1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\",\"offset\":\"1\"}},[_c('span',{staticStyle:{\"margin-right\":\"10px\"}},[_vm._v(\"环境类型\")]),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"70%\"},attrs:{\"label-in-name\":\"\"},on:{\"on-change\":_vm.onEnvSelect},model:{value:(_vm.env),callback:function ($$v) {_vm.env=$$v},expression:\"env\"}},_vm._l((_vm.envs),function(env){return _c('Option',{key:env.code,attrs:{\"value\":env.code || ''}},[_vm._v(\"\\n          \"+_vm._s(env.value)+\"\\n        \")])}),1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"3\",\"offset\":\"1\"}},[_c('Button',{attrs:{\"type\":\"info\"},on:{\"click\":_vm.querySysTree}},[_vm._v(\"查询\")])],1)],1),_vm._v(\" \"),_c('hr',{staticStyle:{\"margin\":\"10px 0\"}}),_vm._v(\" \"),_c('Tabs',{attrs:{\"type\":\"card\",\"value\":_vm.currentTab,\"closable\":false},on:{\"on-click\":_vm.handleTabClick}},[_c('TabPane',{attrs:{\"label\":\"应用逻辑图\",\"name\":\"logic-graph\",\"index\":1}},[(_vm.isDataChanged)?_c('Alert',{attrs:{\"show-icon\":\"\",\"closable\":\"\"}},[_vm._v(\"\\n        Data has beed changed, click Reload button to reload graph.\\n        \"),_c('Button',{attrs:{\"slot\":\"desc\"},on:{\"click\":_vm.reloadHandler},slot:\"desc\"},[_vm._v(\"Reload\")])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"graph-container\",attrs:{\"id\":\"graph\"}},[(_vm.spinShow)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}},[_c('Icon',{staticClass:\"spin-icon-load\",attrs:{\"type\":\"ios-loading\",\"size\":\"44\"}}),_vm._v(\" \"),_c('div',[_vm._v(\"加载中...\")])],1):_vm._e()],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"应用树状逻辑图\",\"name\":\"logic-tree-graph\",\"index\":2}},[(_vm.isDataChanged)?_c('Alert',{attrs:{\"show-icon\":\"\",\"closable\":\"\"}},[_vm._v(\"\\n        Data has beed changed, click Reload button to reload graph.\\n        \"),_c('Button',{attrs:{\"slot\":\"desc\"},on:{\"click\":_vm.reloadHandler},slot:\"desc\"},[_vm._v(\"Reload\")])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"graph-container\",attrs:{\"id\":\"graphTree\"}},[(_vm.treeSpinShow)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}},[_c('Icon',{staticClass:\"spin-icon-load\",attrs:{\"type\":\"ios-loading\",\"size\":\"44\"}}),_vm._v(\" \"),_c('div',[_vm._v(\"加载中...\")])],1):_vm._e()],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"物理部署图\",\"name\":\"physicalGraph\",\"index\":3}},[_c('div',{attrs:{\"id\":\"physicalGraph\"}},[(_vm.physicalGraphData.length)?_c('PhysicalGraph',{attrs:{\"graphData\":_vm.physicalGraphData,\"links\":_vm.physicalGraphLinks,\"callback\":_vm.graphCallback}}):_vm._e(),_vm._v(\" \"),(_vm.physicalSpin)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}},[_c('Icon',{staticClass:\"spin-icon-load\",attrs:{\"type\":\"ios-loading\",\"size\":\"44\"}}),_vm._v(\" \"),_c('div',[_vm._v(\"加载中...\")])],1):_vm._e()],1)]),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"部署详情\",\"name\":\"deploy-detail\",\"index\":4}},[_c('Row',{staticStyle:{\"max-height\":\"500px\"}},[_c('Tree',{attrs:{\"data\":_vm.deployTree,\"show-checkbox\":\"\",\"multiple\":\"\",\"check-strictly\":\"\"},on:{\"on-check-change\":_vm.onTreeCheck}})],1),_vm._v(\" \"),_c('Row',{staticStyle:{\"margin-top\":\"20px\"}},[_c('Button',{attrs:{\"icon\":\"md-eye\",\"disabled\":this.selectedDeployItems.length < 1},on:{\"click\":_vm.previewDeploy}},[_vm._v(\"预览\")])],1),_vm._v(\" \"),_c('Row',[_c('div',{staticStyle:{\"overflow-x\":\"auto\",\"display\":\"-webkit-box\",\"margin-top\":\"20px\"}},_vm._l((_vm.graphSource),function(item,index){return _c('div',{key:index,staticStyle:{\"width\":\"20%\"}},[_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(_vm._s(item.definitionName))]),_vm._v(\" \"),_c('div',{staticClass:\"graph-container\",staticStyle:{\"text-align\":\"center\",\"margin-top\":\"20px\"},attrs:{\"id\":(\"graph_\" + (item.defintiionKey) + \"_\" + index)}})])}),0)]),_vm._v(\" \"),_c('Row',[_c('Button',{attrs:{\"icon\":\"md-checkmark-circle-outline\",\"type\":\"info\",\"disabled\":this.selectedDeployItems.length < 1},on:{\"click\":_vm.executeDeploy}},[_vm._v(\"执行流程\")])],1)],1),_vm._v(\" \"),_vm._l((_vm.tabList),function(ci,index){return (_vm.isShowTabs)?_c('TabPane',{key:ci.id,attrs:{\"name\":ci.id,\"label\":ci.name,\"index\":index + 5}},[_c('WeTable',{ref:'table' + ci.id,refInFor:true,attrs:{\"tableData\":ci.tableData,\"tableOuterActions\":ci.outerActions,\"tableInnerActions\":ci.innerActions,\"tableColumns\":ci.tableColumns,\"pagination\":ci.pagination,\"ascOptions\":ci.ascOptions,\"showCheckbox\":_vm.needCheckout,\"isRefreshable\":true,\"tableHeight\":\"650\"},on:{\"actionFun\":_vm.actionFun,\"sortHandler\":_vm.sortHandler,\"handleSubmit\":_vm.handleSubmit,\"getSelectedRows\":_vm.onSelectedRowsChange,\"pageChange\":_vm.pageChange,\"pageSizeChange\":_vm.pageSizeChange}})],1):_vm._e()})],2)],1)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","function injectStyle (context) {\n  require(\"!!vue-loader/node_modules/vue-style-loader!css-loader?minimize!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-219c0c25\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!sass-loader!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./application-deployment.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./application-deployment.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./application-deployment.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-219c0c25\\\",\\\"hasScoped\\\":true,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./application-deployment.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-219c0c25\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","module.exports = __webpack_public_path__ + \"img/c9b5ff9ac8179ce2fc0d62ed28db1f00.png\";","module.exports = __webpack_public_path__ + \"img/55b60e529f143f104b489e29784b9003.png\";"],"sourceRoot":""}