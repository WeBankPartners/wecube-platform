{"version":3,"sources":["webpack:///./src/pages/designing/application-architecture.vue?c412","webpack:///./src/pages/designing/application-architecture.vue?edc5","webpack:///src/pages/designing/application-architecture.vue","webpack:///./src/pages/designing/application-architecture.vue?e2c9","webpack:///./src/pages/designing/application-architecture.vue"],"names":["exports","module","push","i","content","locals","add","default","components","PhysicalGraph","data","tabList","systemDesigns","systemDesignVersion","deployTree","fixVersionTreeModal","payload","filters","pageable","pageSize","startIndex","paging","sorting","systemDesignCiTypeId","invokeDesignCiTypeId","graph","systemDesignData","physicalGraphData","physicalGraphLinks","physicalGraphNodes","physicalGraphLineNodes","serviceDesign","unitDesign","currentTab","spinShow","isDataChanged","physicalSpin","invokeLines","isShowInvokeSequence","invokeSequenceCode","invokeSequenceForm","isShowInvokeSequenceDetial","invokeSequenceData","spliceInvokeSequenceList","totalNum","currentNum","currentInvokeSequenceTag","currentInvokeSequence","selectedInvokeSequence","computed","tableRef","this","needCheckout","$route","name","methods","closeInvokeSquence","initGraph","backInvokeSequence","reColorInvokeSequence","nextInvokeSequence","onSearchInvokeSquence","found","handleInvokeSquence","invokeDesignSequenceList","forEach","_","key_name","join","length","shadeAll","reColorCurrentInvokeSequenceLine","current","cancelFixVersion","graphCallback","formatTree","map","children","title","id","guid","expand","disableCheckbox","orchestration","initEvent","renderGraph","genDOT","console","log","dots","genChildrenDot","Array","concat","genServiceInvokeLine","unitNode","ciTypeId","serviceData","InvokeLine","line","state","stateColorMap","has","code","color","get","renderNode","node","renderServiceNode","result","renderOtherNodes","Object","keys","graphviz","renderDot","nodesString","svg","attr","width","height","edge","reColorCurrentInvokeSequenceNode","handleTabClick","getCurrentData","onSelectedRowsChange","rows","isUpdateableAry","r","nextOperations","find","isDeleteableAry","val","ci","outerActions","actionType","props","disabled","every","isValueTrue","actionFun","type","exportHandler","addHandler","editHandler","saveHandler","deleteHandler","cancelHandler","$refs","rowCancelHandler","weTableRowId","defaultHandler","sortHandler","asc","order","field","key","queryCiData","handleSubmit","tableColumns","inputType","emptyRowData","inputKey","tableData","unshift","setAllRowsUneditable","setCheckoutStatus","$Modal","confirm","onOk","onCancel","document","querySelector","click","swapRowEditable","$nextTick","deleteAttr","isAuto","attrs","propertyName","pageChange","pagination","currentPage","pageSizeChange","size","getSelectOptions","columns","queryCiAttrs","onSystemDesignSelect","created","getArchitectureDesignTabs","getSystemDesigns","render","_vm","_h","$createElement","_c","_self","staticStyle","_v","on","_l","item","_s","onArchChange","querySysTree","model","value","callback","$$v","expression","slot","onArchFixVersion","reloadHandler","_e","staticClass","ref","$set","refInFor","innerActions","ascOptions","staticRenderFns","injectStyle","context","__vue_template_functional__","__vue_styles__","__vue_scopeId__","__vue_module_identifier__","Component"],"mappings":"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","file":"js/chunk-2478f518.c731a5eb.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ivu-card-head p[data-v-9c5767b4]{height:30px;line-height:30px}.filter-title[data-v-9c5767b4]{margin-right:10px}#physicalGraph[data-v-9c5767b4]{position:relative;min-height:300px}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9c5767b4\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./application-architecture.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-loader/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"683f3f05\", content, true, {});","<template>\r\n  <Row>\r\n    <Row>\r\n      <Col span=\"12\">\r\n        <Row>\r\n          <span style=\"margin-right: 10px\">系统设计</span>\r\n          <Select\r\n            filterable\r\n            @on-change=\"onSystemDesignSelect\"\r\n            label-in-name\r\n            style=\"width: 35%;\"\r\n          >\r\n            <Option\r\n              v-for=\"item in systemDesigns\"\r\n              :value=\"item.guid\"\r\n              :key=\"item.guid\"\r\n              >{{ item.name }}</Option\r\n            >\r\n          </Select>\r\n          <Button style=\"margin: 0 10px;\" @click=\"onArchChange\"\r\n            >架构变更</Button\r\n          >\r\n          <Button @click=\"querySysTree\">去定版</Button>\r\n          <Modal v-model=\"fixVersionTreeModal\" width=\"500px\" title=\"去定版\">\r\n            <div style=\"max-height: 600px; overflow: auto;\">\r\n              <Tree :data=\"deployTree\"></Tree>\r\n            </div>\r\n            <div slot=\"footer\">\r\n              <Button @click=\"cancelFixVersion\">取消定版</Button>\r\n              <Button type=\"info\" @click=\"onArchFixVersion\">确定定版</Button>\r\n            </div>\r\n          </Modal>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n    <Card style=\"margin-top: 20px\">\r\n      <div>\r\n        <Tabs\r\n          type=\"card\"\r\n          :value=\"currentTab\"\r\n          :closable=\"false\"\r\n          @on-click=\"handleTabClick\"\r\n        >\r\n          <TabPane label=\"应用逻辑图\" name=\"architecture-design\">\r\n            <Alert show-icon closable v-if=\"isDataChanged\">\r\n              Data has beed changed, click Reload button to reload graph.\r\n              <Button slot=\"desc\" @click=\"reloadHandler\">Reload</Button>\r\n            </Alert>\r\n            <Spin size=\"large\" fix v-if=\"spinShow\">\r\n              <Icon type=\"ios-loading\" size=\"44\" class=\"spin-icon-load\"></Icon>\r\n              <div>加载中...</div>\r\n            </Spin>\r\n            <Row>\r\n              <Col span=\"18\">\r\n                <div style=\"padding-right: 20px\">\r\n                  <div class=\"graph-container\" id=\"graph\"></div>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                span=\"6\"\r\n                offset=\"0\"\r\n                class=\"func-wrapper\"\r\n                v-if=\"isShowInvokeSequence\"\r\n              >\r\n                <Collapse>\r\n                  <Panel name=\"invokeDesignSequence\">\r\n                    <b>调用时序设计</b>\r\n                    <Form\r\n                      slot=\"content\"\r\n                      ref=\"invokeSequenceForm\"\r\n                      :model=\"invokeSequenceForm\"\r\n                      label-position=\"left\"\r\n                      :label-width=\"120\"\r\n                    >\r\n                      <Form-item label=\"调用时序设计\">\r\n                        <Row>\r\n                          <Select\r\n                            placeholder=\"请选择\"\r\n                            v-model=\"invokeSequenceForm.selectedInvokeSequence\"\r\n                            style=\"width:calc(100% - 70px)\"\r\n                          >\r\n                            <Option\r\n                              v-for=\"item in invokeSequenceForm.invokeSequenceData\"\r\n                              :key=\"item.data.guid\"\r\n                              :value=\"item.data.guid\"\r\n                              >{{ item.data.code }}</Option\r\n                            >\r\n                          </Select>\r\n                          <Button\r\n                            style=\"margin-right: 10px;float: right; width=70px;\"\r\n                            @click=\"onSearchInvokeSquence\"\r\n                            >确定</Button\r\n                          >\r\n                        </Row>\r\n                      </Form-item>\r\n                      <Form-item\r\n                        label=\"调用时序设计序列\"\r\n                        v-if=\"invokeSequenceForm.isShowInvokeSequenceDetial\"\r\n                      >\r\n                        <span style=\"margin-right: 10px\">{{\r\n                          invokeSequenceForm.spliceInvokeSequenceList\r\n                        }}</span>\r\n                      </Form-item>\r\n                      <Form-Item\r\n                        label=\"当前调用\"\r\n                        v-if=\"invokeSequenceForm.isShowInvokeSequenceDetial\"\r\n                      >\r\n                        <Row>\r\n                          <span style=\"margin-right: 10px\">{{\r\n                            invokeSequenceForm.currentInvokeSequenceTag\r\n                          }}</span>\r\n                          <span\r\n                            class=\"header-buttons-container margin-right\"\r\n                            style=\"float:right\"\r\n                          >\r\n                            <Tooltip content=\"上一步\" placement=\"top-start\">\r\n                              <Button\r\n                                size=\"small\"\r\n                                @click=\"backInvokeSequence\"\r\n                                icon=\"md-arrow-round-back\"\r\n                              ></Button>\r\n                            </Tooltip>\r\n                            <span\r\n                              >{{ invokeSequenceForm.currentNum }}/{{\r\n                                invokeSequenceForm.totalNum\r\n                              }}</span\r\n                            >\r\n                            <Tooltip content=\"下一步\" placement=\"top-start\">\r\n                              <Button\r\n                                size=\"small\"\r\n                                @click=\"nextInvokeSequence\"\r\n                                icon=\"md-arrow-round-forward\"\r\n                              ></Button>\r\n                            </Tooltip>\r\n                          </span>\r\n                        </Row>\r\n                      </Form-Item>\r\n                      <Form-Item\r\n                        v-if=\"invokeSequenceForm.isShowInvokeSequenceDetial\"\r\n                      >\r\n                        <Button\r\n                          style=\"margin-right: calc(50% + 35px);width=70px;float: right\"\r\n                          @click=\"closeInvokeSquence\"\r\n                          >返回</Button\r\n                        >\r\n                      </Form-Item>\r\n                    </Form>\r\n                  </Panel>\r\n                </Collapse>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n\r\n          <TabPane label=\"物理部署图\" name=\"physicalGraph\">\r\n            <div id=\"physicalGraph\">\r\n              <PhysicalGraph\r\n                v-if=\"physicalGraphData.length\"\r\n                :graphData=\"physicalGraphData\"\r\n                :links=\"physicalGraphLinks\"\r\n                :callback=\"graphCallback\"\r\n              ></PhysicalGraph>\r\n              <Spin size=\"large\" fix v-if=\"physicalSpin\">\r\n                <Icon\r\n                  type=\"ios-loading\"\r\n                  size=\"44\"\r\n                  class=\"spin-icon-load\"\r\n                ></Icon>\r\n                <div>加载中...</div>\r\n              </Spin>\r\n            </div>\r\n          </TabPane>\r\n          <TabPane\r\n            v-if=\"!!systemDesignVersion\"\r\n            v-for=\"ci in tabList\"\r\n            :key=\"ci.id\"\r\n            :name=\"ci.id\"\r\n            :label=\"ci.name\"\r\n          >\r\n            <WeTable\r\n              :tableData=\"ci.tableData\"\r\n              :tableOuterActions=\"ci.outerActions\"\r\n              :tableInnerActions=\"ci.innerActions\"\r\n              :tableColumns=\"ci.tableColumns\"\r\n              :pagination=\"ci.pagination\"\r\n              :ascOptions=\"ci.ascOptions\"\r\n              :showCheckbox=\"needCheckout\"\r\n              :isRefreshable=\"true\"\r\n              @actionFun=\"actionFun\"\r\n              @handleSubmit=\"handleSubmit\"\r\n              @sortHandler=\"sortHandler\"\r\n              @getSelectedRows=\"onSelectedRowsChange\"\r\n              @pageChange=\"pageChange\"\r\n              @pageSizeChange=\"pageSizeChange\"\r\n              tableHeight=\"650\"\r\n              :ref=\"'table' + ci.id\"\r\n            ></WeTable>\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </Card>\r\n  </Row>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3-selection\";\r\nimport * as d3Graphviz from \"d3-graphviz\";\r\nimport {\r\n  getCiTypeAttributes,\r\n  deleteCiDatas,\r\n  createCiDatas,\r\n  updateCiDatas,\r\n  getEnumCodesByCategoryId,\r\n  getCiTypes,\r\n  getSystemDesigns,\r\n  updateCIRecord,\r\n  getAllDesignTreeFromSystemDesign,\r\n  saveAllDesignTreeFromSystemDesign,\r\n  getArchitectureDesignTabs,\r\n  getArchitectureCiDatas,\r\n  getAllCITypes,\r\n  operateCiState,\r\n  getApplicationFrameworkDesignDataTree,\r\n  getAllZoneLinkDesignGroupByIdcDesign\r\n} from \"@/api/server\";\r\nimport {\r\n  outerActions,\r\n  innerActions,\r\n  pagination,\r\n  components\r\n} from \"@/const/actions.js\";\r\nimport { formatData } from \"../util/format.js\";\r\nimport { getExtraInnerActions } from \"../util/state-operations.js\";\r\nimport PhysicalGraph from \"./physical-graph\";\r\n\r\nconst stateColorMap = new Map([\r\n  [\"new\", \"#2f7344\"],\r\n  [\"created\", \"#2f7344\"],\r\n  [\"update\", \"dodgerblue\"],\r\n  [\"change\", \"dodgerblue\"],\r\n  [\"destroyed\", \"red\"],\r\n  [\"delete\", \"red\"]\r\n]);\r\nconst colors = [\r\n  \"#c8d6f0\",\r\n  \"#cde4fd\",\r\n  \"#acc1e8\",\r\n  \"#516282\",\r\n  \"#243047\",\r\n  \"#0f1624\"\r\n];\r\nexport default {\r\n  components: {\r\n    PhysicalGraph\r\n  },\r\n  data() {\r\n    return {\r\n      tabList: [],\r\n      systemDesigns: [],\r\n      systemDesignVersion: \"\",\r\n      deployTree: [],\r\n      fixVersionTreeModal: false,\r\n      payload: {\r\n        filters: [],\r\n        pageable: {\r\n          pageSize: 10,\r\n          startIndex: 0\r\n        },\r\n        paging: true,\r\n        sorting: {}\r\n      },\r\n      systemDesignCiTypeId: \"\",\r\n      invokeDesignCiTypeId: \"\",\r\n      graph: {},\r\n      systemDesignData: [],\r\n      physicalGraphData: [],\r\n      physicalGraphLinks: [],\r\n      physicalGraphNodes: {},\r\n      physicalGraphLineNodes: {\r\n        serviceDesign: {},\r\n        unitDesign: {}\r\n      },\r\n      currentTab: \"architecture-design\",\r\n      spinShow: false,\r\n      isDataChanged: false,\r\n      physicalSpin: false,\r\n      invokeLines: [],\r\n      isShowInvokeSequence: false,\r\n      invokeSequenceCode: \"6\",\r\n      invokeSequenceForm: {\r\n        isShowInvokeSequenceDetial: false,\r\n        invokeSequenceData: [],\r\n        spliceInvokeSequenceList: \"\",\r\n        totalNum: 0,\r\n        currentNum: 0,\r\n        currentInvokeSequenceTag: \"\",\r\n        currentInvokeSequence: [],\r\n        selectedInvokeSequence: \"\"\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    tableRef() {\r\n      return \"table\" + this.currentTab;\r\n    },\r\n    needCheckout() {\r\n      return this.$route.name === \"ciDataEnquiry\" ? false : true;\r\n    }\r\n  },\r\n  methods: {\r\n    closeInvokeSquence() {\r\n      this.invokeSequenceForm.totalNum = 0;\r\n      this.invokeSequenceForm.currentNum = 0;\r\n      this.invokeSequenceForm.selectedInvokeSequence = \"\";\r\n      this.invokeSequenceForm.currentInvokeSequenceTag = \"\";\r\n      this.invokeSequenceForm.currentInvokeSequence = [];\r\n      this.invokeSequenceForm.isShowInvokeSequenceDetial = false;\r\n      this.invokeSequenceForm.spliceInvokeSequenceList = \"\";\r\n      this.initGraph();\r\n    },\r\n    backInvokeSequence() {\r\n      if (this.invokeSequenceForm.currentNum > 1) {\r\n        let invokeDesignSequenceList = this.invokeSequenceForm\r\n          .currentInvokeSequence;\r\n        this.invokeSequenceForm.currentNum =\r\n          this.invokeSequenceForm.currentNum - 1;\r\n        this.invokeSequenceForm.currentInvokeSequenceTag =\r\n          invokeDesignSequenceList[\r\n            this.invokeSequenceForm.currentNum - 1\r\n          ].key_name;\r\n        this.reColorInvokeSequence();\r\n      }\r\n    },\r\n    nextInvokeSequence() {\r\n      if (\r\n        this.invokeSequenceForm.currentNum < this.invokeSequenceForm.totalNum\r\n      ) {\r\n        let invokeDesignSequenceList = this.invokeSequenceForm\r\n          .currentInvokeSequence;\r\n        this.invokeSequenceForm.currentNum =\r\n          this.invokeSequenceForm.currentNum + 1;\r\n        this.invokeSequenceForm.currentInvokeSequenceTag =\r\n          invokeDesignSequenceList[\r\n            this.invokeSequenceForm.currentNum - 1\r\n          ].key_name;\r\n        this.reColorInvokeSequence();\r\n      }\r\n    },\r\n    async getAllInvokeSequenceData() {\r\n      this.invokeSequenceForm.invokeSequenceData = [];\r\n      let found = this.tabList.find(i => i.code === this.invokeSequenceCode);\r\n      const { status, message, data } = await getArchitectureCiDatas(\r\n        found.codeId,\r\n        this.systemDesignVersion,\r\n        {}\r\n      );\r\n      if (status === \"OK\") {\r\n        this.invokeSequenceForm.invokeSequenceData = data.contents;\r\n      }\r\n    },\r\n    onSearchInvokeSquence() {\r\n      this.invokeSequenceForm.isShowInvokeSequenceDetial = true;\r\n      const found = this.invokeSequenceForm.invokeSequenceData.find(\r\n        i => i.data.guid === this.invokeSequenceForm.selectedInvokeSequence\r\n      );\r\n      if (found) {\r\n        this.invokeSequenceForm.currentInvokeSequence =\r\n          found.data.invoke_design_sequence;\r\n        this.handleInvokeSquence(true);\r\n      }\r\n    },\r\n    handleInvokeSquence() {\r\n      let invokeDesignSequenceList = this.invokeSequenceForm\r\n        .currentInvokeSequence;\r\n      let spliceInvokeSequenceList = [];\r\n      invokeDesignSequenceList.forEach(_ => {\r\n        spliceInvokeSequenceList.push(_.key_name);\r\n      });\r\n      this.invokeSequenceForm.spliceInvokeSequenceList = spliceInvokeSequenceList.join(\r\n        \" -> \"\r\n      );\r\n      if (invokeDesignSequenceList.length > 0) {\r\n        this.invokeSequenceForm.totalNum = invokeDesignSequenceList.length;\r\n        this.invokeSequenceForm.currentNum = 1;\r\n        this.invokeSequenceForm.currentInvokeSequenceTag =\r\n          invokeDesignSequenceList[0].key_name;\r\n      }\r\n      this.reColorInvokeSequence();\r\n    },\r\n    reColorInvokeSequence() {\r\n      this.initGraph();\r\n      this.shadeAll();\r\n\r\n      this.invokeSequenceForm.currentInvokeSequence.forEach(_ => {\r\n        this.reColorCurrentInvokeSequenceNode(\r\n          _.service_design,\r\n          \"ellipse\",\r\n          \"green\"\r\n        );\r\n        this.reColorCurrentInvokeSequenceNode(\r\n          _.unit_design,\r\n          \"polygon\",\r\n          \"green\"\r\n        );\r\n        this.reColorCurrentInvokeSequenceLine(_, \"green\");\r\n      });\r\n\r\n      let index = this.invokeSequenceForm.currentNum;\r\n      let current = this.invokeSequenceForm.currentInvokeSequence[index - 1];\r\n      this.reColorCurrentInvokeSequenceLine(current, \"red\");\r\n    },\r\n    async onArchFixVersion() {\r\n      if (this.systemDesignVersion === \"\") return;\r\n      const { status, message, data } = await saveAllDesignTreeFromSystemDesign(\r\n        this.systemDesignVersion\r\n      );\r\n      if (status === \"OK\") {\r\n        this.$Notice.success({\r\n          title: \"Success\",\r\n          desc: message\r\n        });\r\n        this.fixVersionTreeModal = false;\r\n      }\r\n    },\r\n    cancelFixVersion() {\r\n      this.fixVersionTreeModal = false;\r\n    },\r\n    async reloadHandler() {\r\n      this.onArchChange();\r\n      this.isDataChanged = false;\r\n    },\r\n    async onArchChange() {\r\n      let { status, message, data } = await getAllCITypes();\r\n      if (status === \"OK\") {\r\n        data.forEach(ci => {\r\n          if (ci.tableName === \"system_design\") {\r\n            this.systemDesignCiTypeId = ci.ciTypeId + \"\";\r\n          }\r\n          if (ci.tableName === \"invoke_design\") {\r\n            this.invokeDesignCiTypeId = ci.ciTypeId;\r\n          }\r\n        });\r\n      }\r\n\r\n      if (this.systemDesignVersion === \"\") return;\r\n      this.spinShow = true;\r\n      this.physicalSpin = true;\r\n      this.getAllDesignTreeFromSystemDesign();\r\n      this.getPhysicalGraphData();\r\n    },\r\n    async getAllDesignTreeFromSystemDesign() {\r\n      const { status, message, data } = await getAllDesignTreeFromSystemDesign(\r\n        this.systemDesignVersion\r\n      );\r\n      if (status === \"OK\") {\r\n        this.getAllInvokeSequenceData();\r\n        this.systemDesignData = data ? data : [];\r\n        this.initGraph();\r\n      }\r\n\r\n      let response = await updateCIRecord(this.systemDesignCiTypeId, {\r\n        guid: this.systemDesignVersion\r\n      });\r\n    },\r\n    async getPhysicalGraphData() {\r\n      this.physicalGraphData = [];\r\n      const promiseArray = [\r\n        getApplicationFrameworkDesignDataTree(this.systemDesignVersion),\r\n        getAllZoneLinkDesignGroupByIdcDesign()\r\n      ];\r\n      const [graphData, links] = await Promise.all(promiseArray);\r\n      if (graphData.status === \"OK\") {\r\n        if (graphData.data.length) {\r\n          this.physicalGraphData = graphData.data;\r\n        } else {\r\n          this.physicalGraphData = [];\r\n          this.physicalSpin = false;\r\n        }\r\n      }\r\n      if (links.status === \"OK\") {\r\n        this.physicalGraphLinks = links.data || [];\r\n      }\r\n    },\r\n    graphCallback() {\r\n      this.physicalSpin = false;\r\n    },\r\n    async querySysTree() {\r\n      if (this.systemDesignVersion === \"\") return;\r\n      this.spinShow = true;\r\n      const { status, message, data } = await getAllDesignTreeFromSystemDesign(\r\n        this.systemDesignVersion\r\n      );\r\n      if (status === \"OK\") {\r\n        this.spinShow = false;\r\n        this.systemDesignData = data ? data : [];\r\n        this.deployTree = this.formatTree(this.systemDesignData);\r\n        this.fixVersionTreeModal = true;\r\n      }\r\n    },\r\n    formatTree(data) {\r\n      return data.map(_ => {\r\n        if (_.children && _.children.length > 0) {\r\n          return {\r\n            ..._,\r\n\r\n            title: _.data.key_name,\r\n            id: _.guid,\r\n            expand: true,\r\n            disableCheckbox: !_.data.orchestration,\r\n            children: this.formatTree(_.children)\r\n          };\r\n        } else {\r\n          return {\r\n            ..._,\r\n            title: _.data.key_name,\r\n            id: _.guid,\r\n            expand: true,\r\n            disableCheckbox: !_.data.orchestration\r\n          };\r\n        }\r\n      });\r\n    },\r\n    initGraph(filters = {}) {\r\n      this.isShowInvokeSequence = true;\r\n      this.spinShow = true;\r\n      let graph;\r\n\r\n      const initEvent = () => {\r\n        graph = d3.select(\"#graph\");\r\n\r\n        graph\r\n          .on(\"dblclick.zoom\", null)\r\n          .on(\"wheel.zoom\", null)\r\n          .on(\"mousewheel.zoom\", null);\r\n        this.graph.graphviz = graph\r\n          .graphviz()\r\n          .scale(1.2)\r\n          .width(window.innerWidth * 0.96)\r\n          .height(window.innerHeight * 0.8)\r\n          .zoom(true);\r\n      };\r\n\r\n      initEvent();\r\n      this.renderGraph(this.systemDesignData);\r\n      this.spinShow = false;\r\n    },\r\n    genDOT(sysData) {\r\n      this.physicalGraphNodes = {};\r\n      this.physicalGraphLineNodes = {\r\n        serviceDesign: {},\r\n        unitDesign: {}\r\n      };\r\n      this.invokeLines = [];\r\n      const width = 16;\r\n      const height = 12;\r\n      let dots = [\r\n        \"digraph G{\",\r\n        \"rankdir=LR nodesep=0.5;\",\r\n        \"Node [fontname=Arial, fontsize=12];\",\r\n        'Edge [fontname=Arial, minlen=\"2\",fontsize=10];',\r\n        `size=\"${width},${height}\";`,\r\n        `subgraph cluster_${sysData[0].guid} {`,\r\n        `style=\"filled\";color=\"#c8d6f0\";`,\r\n        `tooltip=\"${sysData[0].data.description}\";`,\r\n        `label=\"${sysData[0].data.code}\";`,\r\n        this.genChildrenDot(sysData[0].children || [], 1),\r\n        \"}\",\r\n        ...this.invokeLines,\r\n        this.renderOtherNodes(),\r\n        \"}\"\r\n      ];\r\n\r\n      console.log(\r\n        dots\r\n          .join(\"\")\r\n          .replace(/;/g, \";\\n\")\r\n          .replace(/]/g, \"]\\n\")\r\n      );\r\n\r\n      return dots.join(\"\");\r\n    },\r\n    genChildrenDot(data, level) {\r\n      let dots = [];\r\n      data.forEach(_ => {\r\n        if (_.children instanceof Array && _.children.length) {\r\n          dots = dots.concat([\r\n            `subgraph cluster_${_.guid}{`,\r\n            `id=\"g_${_.guid}\";`,\r\n            `style=\"filled\";color=\"${colors[level]}\";`,\r\n            `label=\"${_.data.code || _.data.key_name}\";`,\r\n            `tooltip=\"${_.data.description || _.data.name}\"`,\r\n            _.ciTypeId === 3\r\n              ? this.genServiceInvokeLine(_)\r\n              : this.genChildrenDot(_.children, level + 1),\r\n            \"}\"\r\n          ]);\r\n        } else {\r\n          this.physicalGraphNodes[_.guid] = _;\r\n          dots = dots.concat([\r\n            `\"${_.guid}\"`,\r\n            `[id=\"n_${_.guid}\";`,\r\n            `label=\"${_.data.code || _.data.key_name}\";`,\r\n            \"shape=box;\",\r\n            `style=\"filled\";color=\"${colors[level]}\";`,\r\n            `tooltip=\"${_.data.description || _.data.name}\"];`\r\n          ]);\r\n        }\r\n      });\r\n      return dots.join(\"\");\r\n    },\r\n    genServiceInvokeLine(unitNode) {\r\n      const unitLabel = unitNode.data.code || unitNode.data.key_name;\r\n      let serviceData = [];\r\n      let InvokeLine = [];\r\n      unitNode.children.forEach(_ => {\r\n        if (_.ciTypeId === 4) {\r\n          serviceData.push(_);\r\n        } else if (_.ciTypeId === 5) {\r\n          InvokeLine.push(_);\r\n        }\r\n      });\r\n      if (InvokeLine.length) {\r\n        InvokeLine.forEach(line => {\r\n          let color = \"grey\";\r\n          if (line.data.state && stateColorMap.has(line.data.state.code)) {\r\n            color = stateColorMap.get(line.data.state.code);\r\n          }\r\n          this.invokeLines.push(\r\n            `gn_${line.data.unit_design.guid} -> gn_${\r\n              line.data.service_design.guid\r\n            } [id=\"gl_${line.guid}\",color=\"${color}\",taillabel=\"${\r\n              line.data.type.value\r\n            }\", labeldistance=3];`\r\n          );\r\n          this.physicalGraphLineNodes.serviceDesign[\r\n            line.data.service_design.guid\r\n          ] = line.data.service_design;\r\n          this.physicalGraphLineNodes.unitDesign[line.data.unit_design.guid] =\r\n            line.data.unit_design;\r\n        });\r\n      }\r\n      return [\r\n        this.renderNode(unitNode, \"doubleoctagon\"),\r\n        ...this.renderServiceNode(serviceData, unitNode)\r\n      ].join(\"\");\r\n    },\r\n    renderNode(node, nodeType) {\r\n      this.physicalGraphNodes[node.guid] = node;\r\n      return `\"gn_${node.guid}\" [label=\"${node.data.code}\", id=\"gn_${\r\n        node.guid\r\n      }\", shape=${nodeType ||\r\n        \"ellipse\"},style=\"filled\", color=\"${stateColorMap.get(\r\n        node.data.state.code\r\n      )}\", tooltip=\"${node.data.description || node.data.name}\"]`;\r\n    },\r\n    renderServiceNode(serviceData, unitNode) {\r\n      let result = [];\r\n      if (serviceData.length) {\r\n        serviceData.forEach(_ => {\r\n          result = result.concat([\r\n            this.renderNode(_),\r\n            `\"gn_${_.guid}\" -> \"gn_${unitNode.guid}\" [arrowhead = \"t\"]`\r\n          ]);\r\n        });\r\n      }\r\n      return result;\r\n    },\r\n    renderOtherNodes() {\r\n      let result = \"\";\r\n      Object.keys(this.physicalGraphLineNodes.serviceDesign).forEach(\r\n        serviceGuid => {\r\n          if (!this.physicalGraphNodes[serviceGuid]) {\r\n            const node = this.physicalGraphLineNodes.serviceDesign[serviceGuid];\r\n            result += `\"gn_${node.guid}\" [label=\"${node.code}\",id=\"gn_${\r\n              node.guid\r\n            }\",shape=\"ellipse\",tooltip=\"${node.description || node.name}\"]`;\r\n          }\r\n        }\r\n      );\r\n      Object.keys(this.physicalGraphLineNodes.unitDesign).forEach(unitGuid => {\r\n        if (!this.physicalGraphNodes[unitGuid]) {\r\n          const node = this.physicalGraphLineNodes.unitDesign[unitGuid];\r\n          result += `\"gn_${node.guid}\" [label=\"${node.code}\",id=\"gn_${\r\n            node.guid\r\n          }\",shape=\"doubleoctagon\",tooltip=\"${node.description || node.name}\"]`;\r\n        }\r\n      });\r\n      return result;\r\n    },\r\n    renderGraph(data) {\r\n      let nodesString = this.genDOT(data);\r\n      this.graph.graphviz.renderDot(nodesString);\r\n      let svg = d3.select(\"#graph\").select(\"svg\");\r\n      let width = svg.attr(\"width\");\r\n      let height = svg.attr(\"height\");\r\n      svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height);\r\n    },\r\n    shadeAll() {\r\n      d3.selectAll(\"g path\")\r\n        .attr(\"stroke\", \"#7f8fa6\")\r\n        .attr(\"stroke-opacity\", \".2\");\r\n      d3.selectAll(\"g polygon\")\r\n        .attr(\"stroke\", \"#7f8fa6\")\r\n        .attr(\"stroke-opacity\", \".2\")\r\n        .attr(\"fill\", \"#7f8fa6\")\r\n        .attr(\"fill-opacity\", \".2\");\r\n      d3.selectAll(\"g ellipse\")\r\n        .attr(\"stroke\", \"#7f8fa6\")\r\n        .attr(\"stroke-opacity\", \".2\")\r\n        .attr(\"fill\", \"#7f8fa6\")\r\n        .attr(\"fill-opacity\", \".2\");\r\n      d3.selectAll(\"text\").attr(\"fill\", \"#000\");\r\n    },\r\n    reColorCurrentInvokeSequenceLine(invokeSequence, color) {\r\n      //line\r\n      let edge = d3\r\n        .select(\"#\" + `gl_${invokeSequence.guid}`)\r\n        .attr(\"stroke\", color)\r\n        .attr(\"stroke-opacity\", \"1\");\r\n      edge\r\n        .select(\"path\")\r\n        .attr(\"stroke\", color)\r\n        .attr(\"stroke-opacity\", \"1\");\r\n      edge\r\n        .select(\"polygon\")\r\n        .attr(\"fill\", color)\r\n        .attr(\"stroke\", color)\r\n        .attr(\"stroke-opacity\", \"1\");\r\n    },\r\n    reColorCurrentInvokeSequenceNode(nodeId, nodeType, color) {\r\n      //node\r\n      let node = d3.select(\"#\" + `gn_${nodeId}`);\r\n      node\r\n        .selectAll(nodeType)\r\n        .attr(\"fill\", color)\r\n        .attr(\"stroke\", color)\r\n        .attr(\"stroke-opacity\", \"1\");\r\n    },\r\n    handleTabClick(name) {\r\n      this.payload.filters = [];\r\n      this.currentTab = name;\r\n      if (name !== \"architecture-design\" && name !== \"physicalGraph\") {\r\n        this.getCurrentData();\r\n      }\r\n    },\r\n    onSelectedRowsChange(rows, checkoutBoxdisable) {\r\n      if (rows.length > 0) {\r\n        let isUpdateableAry = [];\r\n        let isDeleteableAry = [];\r\n\r\n        rows.forEach((r, index) => {\r\n          isUpdateableAry.push(!!r.nextOperations.find(op => op === \"update\"));\r\n          isDeleteableAry.push(!!r.nextOperations.find(op => op === \"delete\"));\r\n        });\r\n        let isValueTrue = val => {\r\n          return val === true;\r\n        };\r\n\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.outerActions.forEach(_ => {\r\n              switch (_.actionType) {\r\n                case \"add\":\r\n                  _.props.disabled = _.actionType === \"add\";\r\n                  break;\r\n                case \"edit\":\r\n                  _.props.disabled = !isUpdateableAry.every(isValueTrue);\r\n                  break;\r\n                case \"delete\":\r\n                  _.props.disabled = !isDeleteableAry.every(isValueTrue);\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.outerActions.forEach(_ => {\r\n              _.props.disabled = !(\r\n                _.actionType === \"add\" ||\r\n                _.actionType === \"export\" ||\r\n                _.actionType === \"cancel\"\r\n              );\r\n            });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    actionFun(type, data) {\r\n      switch (type) {\r\n        case \"export\":\r\n          this.exportHandler();\r\n          break;\r\n        case \"add\":\r\n          this.addHandler();\r\n          break;\r\n        case \"edit\":\r\n          this.editHandler();\r\n          break;\r\n        case \"save\":\r\n          this.saveHandler(data);\r\n          break;\r\n        case \"delete\":\r\n          this.deleteHandler(data);\r\n          break;\r\n        case \"cancel\":\r\n          this.cancelHandler();\r\n          break;\r\n        case \"innerCancel\":\r\n          this.$refs[this.tableRef][0].rowCancelHandler(data.weTableRowId);\r\n          break;\r\n        default:\r\n          this.defaultHandler(type, data);\r\n          break;\r\n      }\r\n    },\r\n    sortHandler(data) {\r\n      this.payload.sorting = {\r\n        asc: data.order === \"asc\",\r\n        field: data.key\r\n      };\r\n      this.queryCiData();\r\n    },\r\n    handleSubmit(data) {\r\n      this.payload.filters = data;\r\n      this.queryCiData();\r\n    },\r\n    async defaultHandler(type, row) {\r\n      const { data, status, message } = await operateCiState(\r\n        this.currentTab,\r\n        row.guid,\r\n        type\r\n      );\r\n      if (status === \"OK\") {\r\n        this.$Notice.success({\r\n          title: type,\r\n          desc: message\r\n        });\r\n        this.queryCiData();\r\n      }\r\n    },\r\n    addHandler() {\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          let emptyRowData = {};\r\n          ci.tableColumns.forEach(_ => {\r\n            if (_.inputType === \"multiSelect\" || _.inputType === \"multiRef\") {\r\n              emptyRowData[_.inputKey] = [];\r\n            } else {\r\n              emptyRowData[_.inputKey] = \"\";\r\n            }\r\n          });\r\n          emptyRowData[\"isRowEditable\"] = true;\r\n          emptyRowData[\"isNewAddedRow\"] = true;\r\n          emptyRowData[\"weTableRowId\"] = 1;\r\n          emptyRowData[\"nextOperations\"] = [];\r\n\r\n          ci.tableData.unshift(emptyRowData);\r\n          this.$nextTick(() => {\r\n            this.$refs[this.tableRef][0].pushNewAddedRowToSelections();\r\n            this.$refs[this.tableRef][0].setCheckoutStatus(true);\r\n          });\r\n          ci.outerActions.forEach(_ => {\r\n            _.props.disabled = _.actionType === \"add\";\r\n          });\r\n        }\r\n      });\r\n    },\r\n    cancelHandler() {\r\n      this.$refs[this.tableRef][0].setAllRowsUneditable();\r\n      this.$refs[this.tableRef][0].setCheckoutStatus();\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          ci.outerActions.forEach(_ => {\r\n            _.props.disabled = !(\r\n              _.actionType === \"add\" ||\r\n              _.actionType === \"export\" ||\r\n              _.actionType === \"cancel\"\r\n            );\r\n          });\r\n        }\r\n      });\r\n    },\r\n    deleteHandler(deleteData) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除？\",\r\n        \"z-index\": 1000000,\r\n        onOk: async () => {\r\n          let found = this.tabList.find(i => i.id === this.currentTab);\r\n          const payload = {\r\n            id: found && found.code,\r\n            deleteData: deleteData.map(_ => _.guid)\r\n          };\r\n          const { status, message, data } = await deleteCiDatas(payload);\r\n          if (status === \"OK\") {\r\n            this.$Notice.success({\r\n              title: \"Delete data Success\",\r\n              desc: message\r\n            });\r\n            this.tabList.forEach(ci => {\r\n              if (ci.id === this.currentTab) {\r\n                ci.outerActions.forEach(_ => {\r\n                  _.props.disabled =\r\n                    _.actionType === \"save\" ||\r\n                    _.actionType === \"edit\" ||\r\n                    _.actionType === \"delete\";\r\n                });\r\n              }\r\n            });\r\n            this.isDataChanged = true;\r\n            this.queryCiData();\r\n          }\r\n        },\r\n        onCancel: () => {}\r\n      });\r\n      document.querySelector(\".ivu-modal-mask\").click();\r\n    },\r\n    editHandler() {\r\n      this.$refs[this.tableRef][0].swapRowEditable(true);\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          ci.outerActions.forEach(_ => {\r\n            if (_.actionType === \"save\") {\r\n              _.props.disabled = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      this.$nextTick(() => {\r\n        this.$refs[this.tableRef][0].setCheckoutStatus(true);\r\n      });\r\n    },\r\n    deleteAttr() {\r\n      let attrs = [];\r\n      const found = this.tabList.find(_ => _.id === this.currentTab);\r\n      found.tableColumns.forEach(i => {\r\n        if (i.isAuto) {\r\n          attrs.push(i.propertyName);\r\n        }\r\n      });\r\n      return attrs;\r\n    },\r\n    async saveHandler(data) {\r\n      let setBtnsStatus = () => {\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.outerActions.forEach(_ => {\r\n              _.props.disabled = !(\r\n                _.actionType === \"add\" || _.actionType === \"export\"\r\n              );\r\n            });\r\n          }\r\n        });\r\n        this.$refs[this.tableRef][0].setAllRowsUneditable();\r\n        this.$nextTick(() => {\r\n          /* to get iview original data to set _ischecked flag */\r\n          let objData = this.$refs[this.tableRef][0].$refs.table.$refs.tbody\r\n            .objData;\r\n          for (let obj in objData) {\r\n            objData[obj]._isChecked = false;\r\n            objData[obj]._isDisabled = false;\r\n          }\r\n        });\r\n      };\r\n      let d = JSON.parse(JSON.stringify(data));\r\n      let addAry = d.filter(_ => _.isNewAddedRow);\r\n      let editAry = d.filter(_ => !_.isNewAddedRow);\r\n      if (addAry.length > 0) {\r\n        const deleteAttrs = this.deleteAttr();\r\n        addAry.forEach(_ => {\r\n          deleteAttrs.forEach(attr => {\r\n            delete _[attr];\r\n          });\r\n          delete _.isRowEditable;\r\n          delete _.weTableForm;\r\n          delete _.weTableRowId;\r\n          delete _.isNewAddedRow;\r\n          delete _.nextOperations;\r\n        });\r\n        let found = this.tabList.find(i => i.id === this.currentTab);\r\n        let payload = {\r\n          id: found && found.code,\r\n          createData: addAry\r\n        };\r\n        const { status, message, data } = await createCiDatas(payload);\r\n        if (status === \"OK\") {\r\n          this.$Notice.success({\r\n            title: \"Add data Success\",\r\n            desc: message\r\n          });\r\n          this.isDataChanged = true;\r\n          setBtnsStatus();\r\n          this.queryCiData();\r\n        }\r\n      }\r\n      if (editAry.length > 0) {\r\n        editAry.forEach(_ => {\r\n          delete _.isRowEditable;\r\n          delete _.weTableForm;\r\n          delete _.weTableRowId;\r\n          delete _.isNewAddedRow;\r\n          delete _.nextOperations;\r\n        });\r\n        let found = this.tabList.find(i => i.id === this.currentTab);\r\n\r\n        let payload = {\r\n          id: found && found.code,\r\n          updateData: editAry\r\n        };\r\n        const { status, message, data } = await updateCiDatas(payload);\r\n        if (status === \"OK\") {\r\n          this.$Notice.success({\r\n            title: \"Update data Success\",\r\n            desc: message\r\n          });\r\n          this.isDataChanged = true;\r\n          setBtnsStatus();\r\n          this.queryCiData();\r\n        }\r\n      }\r\n    },\r\n    async exportHandler() {\r\n      let exportPayload = {\r\n        ...this.payload,\r\n        paging: false\r\n      };\r\n      const { status, message, data } = await getArchitectureCiDatas(\r\n        this.currentTab,\r\n        this.systemDesignVersion,\r\n        exportPayload\r\n      );\r\n      if (status === \"OK\") {\r\n        this.$refs[this.tableRef][0].export({\r\n          filename: \"Ci Data\",\r\n          data: formatData(data.contents.map(_ => _.data))\r\n        });\r\n      }\r\n    },\r\n    pageChange(current) {\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          ci.pagination.currentPage = current;\r\n        }\r\n      });\r\n      this.queryCiData();\r\n    },\r\n    pageSizeChange(size) {\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          ci.pagination.pageSize = size;\r\n        }\r\n      });\r\n      this.queryCiData();\r\n    },\r\n    async queryCiData() {\r\n      this.payload.pageable.pageSize = 10;\r\n      this.payload.pageable.startIndex = 0;\r\n      this.tabList.forEach(ci => {\r\n        if (ci.id === this.currentTab) {\r\n          this.payload.pageable.pageSize = ci.pagination.pageSize;\r\n          this.payload.pageable.startIndex =\r\n            (ci.pagination.currentPage - 1) * ci.pagination.pageSize;\r\n        }\r\n      });\r\n\r\n      let found = this.tabList.find(i => i.code === this.currentTab);\r\n      const { status, message, data } = await getArchitectureCiDatas(\r\n        found.codeId,\r\n        this.systemDesignVersion,\r\n        this.payload\r\n      );\r\n      if (status === \"OK\") {\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.tableData = data\r\n              ? data.contents.map(_ => {\r\n                  return {\r\n                    ..._.data,\r\n                    nextOperations: _.meta.nextOperations || []\r\n                  };\r\n                })\r\n              : [];\r\n            ci.pagination.total = data ? data.pageInfo.totalRows : 0;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    async queryCiAttrs(id) {\r\n      const { status, message, data } = await getCiTypeAttributes(id);\r\n      let columns = [];\r\n      const disabledCol = [\r\n        \"created_date\",\r\n        \"updated_date\",\r\n        \"created_by\",\r\n        \"updated_by\",\r\n        \"key_name\",\r\n        \"guid\"\r\n      ];\r\n      if (status === \"OK\") {\r\n        let columns = [];\r\n        data.forEach(_ => {\r\n          const disEditor = disabledCol.find(i => i === _.propertyName);\r\n          let renderKey = _.propertyName;\r\n          if (_.status !== \"decommissioned\" && _.status !== \"notCreated\") {\r\n            const com =\r\n              _.propertyName === \"invoke_design_sequence\"\r\n                ? { component: \"sequenceDiagram\" }\r\n                : { ...components[_.inputType] };\r\n            columns.push({\r\n              ..._,\r\n              title: _.name,\r\n              key: renderKey,\r\n              inputKey: _.propertyName,\r\n              inputType: _.inputType,\r\n              referenceId: _.referenceId,\r\n              disEditor: !_.isEditable,\r\n              disAdded: !_.isEditable,\r\n              placeholder: _.name,\r\n              component: \"Input\",\r\n              ciType: { id: _.referenceId, name: _.name },\r\n              type: \"text\",\r\n              ...com\r\n            });\r\n          }\r\n        });\r\n        this.tabList.forEach(ci => {\r\n          if (ci.id === this.currentTab) {\r\n            ci.tableColumns = this.getSelectOptions(columns);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    getSelectOptions(columns) {\r\n      columns.forEach(async _ => {\r\n        if (_.inputType === \"select\") {\r\n          const { status, message, data } = await getEnumCodesByCategoryId(\r\n            0,\r\n            _.referenceId\r\n          );\r\n          _[\"options\"] = data\r\n            .filter(j => j.status === \"active\")\r\n            .map(i => {\r\n              return {\r\n                label: i.value,\r\n                value: i.codeId\r\n              };\r\n            });\r\n        }\r\n      });\r\n      return columns;\r\n    },\r\n    getCurrentData() {\r\n      this.queryCiAttrs(this.currentTab);\r\n      this.queryCiData();\r\n    },\r\n    async getArchitectureDesignTabs() {\r\n      const { data, status, message } = await getArchitectureDesignTabs();\r\n      let allInnerActions = await getExtraInnerActions();\r\n      if (status === \"OK\") {\r\n        this.tabList = data.map(_ => {\r\n          return {\r\n            ..._,\r\n            name: _.value,\r\n            id: _.code,\r\n            tableData: [],\r\n            tableColumns: [],\r\n            outerActions: JSON.parse(JSON.stringify(outerActions)),\r\n            innerActions: JSON.parse(\r\n              JSON.stringify(innerActions.concat(allInnerActions))\r\n            ),\r\n            pagination: JSON.parse(JSON.stringify(pagination)),\r\n            ascOptions: {}\r\n          };\r\n        });\r\n      }\r\n    },\r\n    onSystemDesignSelect(key) {\r\n      this.systemDesignVersion = key;\r\n      if (\r\n        this.currentTab !== \"architecture-design\" &&\r\n        this.currentTab !== \"physicalGraph\"\r\n      ) {\r\n        this.getCurrentData();\r\n      }\r\n    },\r\n    async getSystemDesigns() {\r\n      let { status, data, message } = await getSystemDesigns();\r\n      if (status === \"OK\") {\r\n        this.systemDesigns = data.contents.map(_ => _.data);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getArchitectureDesignTabs();\r\n    this.getSystemDesigns();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ivu-card-head p {\r\n  height: 30px;\r\n  line-height: 30px;\r\n}\r\n.filter-title {\r\n  margin-right: 10px;\r\n}\r\n#physicalGraph {\r\n  position: relative;\r\n  min-height: 300px;\r\n}\r\n</style>\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Row',[_c('Row',[_c('Col',{attrs:{\"span\":\"12\"}},[_c('Row',[_c('span',{staticStyle:{\"margin-right\":\"10px\"}},[_vm._v(\"系统设计\")]),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"35%\"},attrs:{\"filterable\":\"\",\"label-in-name\":\"\"},on:{\"on-change\":_vm.onSystemDesignSelect}},_vm._l((_vm.systemDesigns),function(item){return _c('Option',{key:item.guid,attrs:{\"value\":item.guid}},[_vm._v(_vm._s(item.name))])}),1),_vm._v(\" \"),_c('Button',{staticStyle:{\"margin\":\"0 10px\"},on:{\"click\":_vm.onArchChange}},[_vm._v(\"架构变更\")]),_vm._v(\" \"),_c('Button',{on:{\"click\":_vm.querySysTree}},[_vm._v(\"去定版\")]),_vm._v(\" \"),_c('Modal',{attrs:{\"width\":\"500px\",\"title\":\"去定版\"},model:{value:(_vm.fixVersionTreeModal),callback:function ($$v) {_vm.fixVersionTreeModal=$$v},expression:\"fixVersionTreeModal\"}},[_c('div',{staticStyle:{\"max-height\":\"600px\",\"overflow\":\"auto\"}},[_c('Tree',{attrs:{\"data\":_vm.deployTree}})],1),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{on:{\"click\":_vm.cancelFixVersion}},[_vm._v(\"取消定版\")]),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"info\"},on:{\"click\":_vm.onArchFixVersion}},[_vm._v(\"确定定版\")])],1)])],1)],1)],1),_vm._v(\" \"),_c('Card',{staticStyle:{\"margin-top\":\"20px\"}},[_c('div',[_c('Tabs',{attrs:{\"type\":\"card\",\"value\":_vm.currentTab,\"closable\":false},on:{\"on-click\":_vm.handleTabClick}},[_c('TabPane',{attrs:{\"label\":\"应用逻辑图\",\"name\":\"architecture-design\"}},[(_vm.isDataChanged)?_c('Alert',{attrs:{\"show-icon\":\"\",\"closable\":\"\"}},[_vm._v(\"\\n            Data has beed changed, click Reload button to reload graph.\\n            \"),_c('Button',{attrs:{\"slot\":\"desc\"},on:{\"click\":_vm.reloadHandler},slot:\"desc\"},[_vm._v(\"Reload\")])],1):_vm._e(),_vm._v(\" \"),(_vm.spinShow)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}},[_c('Icon',{staticClass:\"spin-icon-load\",attrs:{\"type\":\"ios-loading\",\"size\":\"44\"}}),_vm._v(\" \"),_c('div',[_vm._v(\"加载中...\")])],1):_vm._e(),_vm._v(\" \"),_c('Row',[_c('Col',{attrs:{\"span\":\"18\"}},[_c('div',{staticStyle:{\"padding-right\":\"20px\"}},[_c('div',{staticClass:\"graph-container\",attrs:{\"id\":\"graph\"}})])]),_vm._v(\" \"),(_vm.isShowInvokeSequence)?_c('Col',{staticClass:\"func-wrapper\",attrs:{\"span\":\"6\",\"offset\":\"0\"}},[_c('Collapse',[_c('Panel',{attrs:{\"name\":\"invokeDesignSequence\"}},[_c('b',[_vm._v(\"调用时序设计\")]),_vm._v(\" \"),_c('Form',{ref:\"invokeSequenceForm\",attrs:{\"slot\":\"content\",\"model\":_vm.invokeSequenceForm,\"label-position\":\"left\",\"label-width\":120},slot:\"content\"},[_c('Form-item',{attrs:{\"label\":\"调用时序设计\"}},[_c('Row',[_c('Select',{staticStyle:{\"width\":\"calc(100% - 70px)\"},attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.invokeSequenceForm.selectedInvokeSequence),callback:function ($$v) {_vm.$set(_vm.invokeSequenceForm, \"selectedInvokeSequence\", $$v)},expression:\"invokeSequenceForm.selectedInvokeSequence\"}},_vm._l((_vm.invokeSequenceForm.invokeSequenceData),function(item){return _c('Option',{key:item.data.guid,attrs:{\"value\":item.data.guid}},[_vm._v(_vm._s(item.data.code))])}),1),_vm._v(\" \"),_c('Button',{staticStyle:{\"margin-right\":\"10px\",\"float\":\"right\"},on:{\"click\":_vm.onSearchInvokeSquence}},[_vm._v(\"确定\")])],1)],1),_vm._v(\" \"),(_vm.invokeSequenceForm.isShowInvokeSequenceDetial)?_c('Form-item',{attrs:{\"label\":\"调用时序设计序列\"}},[_c('span',{staticStyle:{\"margin-right\":\"10px\"}},[_vm._v(_vm._s(_vm.invokeSequenceForm.spliceInvokeSequenceList))])]):_vm._e(),_vm._v(\" \"),(_vm.invokeSequenceForm.isShowInvokeSequenceDetial)?_c('Form-Item',{attrs:{\"label\":\"当前调用\"}},[_c('Row',[_c('span',{staticStyle:{\"margin-right\":\"10px\"}},[_vm._v(_vm._s(_vm.invokeSequenceForm.currentInvokeSequenceTag))]),_vm._v(\" \"),_c('span',{staticClass:\"header-buttons-container margin-right\",staticStyle:{\"float\":\"right\"}},[_c('Tooltip',{attrs:{\"content\":\"上一步\",\"placement\":\"top-start\"}},[_c('Button',{attrs:{\"size\":\"small\",\"icon\":\"md-arrow-round-back\"},on:{\"click\":_vm.backInvokeSequence}})],1),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.invokeSequenceForm.currentNum)+\"/\"+_vm._s(_vm.invokeSequenceForm.totalNum))]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"content\":\"下一步\",\"placement\":\"top-start\"}},[_c('Button',{attrs:{\"size\":\"small\",\"icon\":\"md-arrow-round-forward\"},on:{\"click\":_vm.nextInvokeSequence}})],1)],1)])],1):_vm._e(),_vm._v(\" \"),(_vm.invokeSequenceForm.isShowInvokeSequenceDetial)?_c('Form-Item',[_c('Button',{staticStyle:{\"margin-right\":\"calc(50% + 35px)\",\"float\":\"right\"},on:{\"click\":_vm.closeInvokeSquence}},[_vm._v(\"返回\")])],1):_vm._e()],1)],1)],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"物理部署图\",\"name\":\"physicalGraph\"}},[_c('div',{attrs:{\"id\":\"physicalGraph\"}},[(_vm.physicalGraphData.length)?_c('PhysicalGraph',{attrs:{\"graphData\":_vm.physicalGraphData,\"links\":_vm.physicalGraphLinks,\"callback\":_vm.graphCallback}}):_vm._e(),_vm._v(\" \"),(_vm.physicalSpin)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}},[_c('Icon',{staticClass:\"spin-icon-load\",attrs:{\"type\":\"ios-loading\",\"size\":\"44\"}}),_vm._v(\" \"),_c('div',[_vm._v(\"加载中...\")])],1):_vm._e()],1)]),_vm._v(\" \"),_vm._l((_vm.tabList),function(ci){return (!!_vm.systemDesignVersion)?_c('TabPane',{key:ci.id,attrs:{\"name\":ci.id,\"label\":ci.name}},[_c('WeTable',{ref:'table' + ci.id,refInFor:true,attrs:{\"tableData\":ci.tableData,\"tableOuterActions\":ci.outerActions,\"tableInnerActions\":ci.innerActions,\"tableColumns\":ci.tableColumns,\"pagination\":ci.pagination,\"ascOptions\":ci.ascOptions,\"showCheckbox\":_vm.needCheckout,\"isRefreshable\":true,\"tableHeight\":\"650\"},on:{\"actionFun\":_vm.actionFun,\"handleSubmit\":_vm.handleSubmit,\"sortHandler\":_vm.sortHandler,\"getSelectedRows\":_vm.onSelectedRowsChange,\"pageChange\":_vm.pageChange,\"pageSizeChange\":_vm.pageSizeChange}})],1):_vm._e()})],2)],1)])],1)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","function injectStyle (context) {\n  require(\"!!vue-loader/node_modules/vue-style-loader!css-loader?minimize!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9c5767b4\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./application-architecture.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./application-architecture.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./application-architecture.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9c5767b4\\\",\\\"hasScoped\\\":true,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./application-architecture.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-9c5767b4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n"],"sourceRoot":""}