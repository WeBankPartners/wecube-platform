{"version":3,"sources":["webpack:///./src/pages/implementation/workflow-execution.vue?60e8","webpack:///./src/pages/implementation/workflow-execution.vue?5423","webpack:///./src/pages/util/event.js","webpack:///src/pages/implementation/workflow-execution.vue","webpack:///./src/pages/implementation/workflow-execution.vue?2684","webpack:///./src/pages/implementation/workflow-execution.vue"],"names":["content","module","i","locals","exports","add","default","push","addEvent","selector","type","fn","nodesEl","document","querySelectorAll","length","node","removeEventListener","addEventListener","removeEvent","data","graph","flowGraph","modelData","flowData","allFlowInstances","allFlows","allTarget","currentFlowNodeId","foundRefAry","selectedFlowInstance","selectedFlow","selectedTarget","showExcution","isShowBody","isEnqueryPage","workflowActionModalVisible","currentFailedNodeID","timer","modelNodeDetail","flowNodeDetail","modelDetailTimer","flowNodesBindings","flowDetailTimer","mounted","this","getProcessInstances","getAllFlow","destroyed","clearInterval","methods","orchestrationSelectHandler","getFlowOutlineData","queryHandler","$nextTick","createHandler","onTargetSelectHandler","getModelData","formatNodesBindings","orderedNo","found","forEach","d","entityTypeId","entityDataId","item","id","refFlowNodeIds","renderModelGraph","_","succeedingIds","current","map","nodeId","to","replace","pathAry","graphviz","renderDot","nodesString","modelGraphMouseenterHandler","modelGraphMouseleaveHandler","clearTimeout","setTimeout","modelDetailEnterHandler","modelDetail","style","display","modelDetailLeaveHandler","e","renderFlowGraph","Completed","deployed","InProgress","Faulted","Timeouted","NotStarted","bindFlowEvent","start","getStatus","setInterval","stop","processInstance","retryHandler","target","parentNode","getAttribute","preventDefault","stopPropagation","flowNodesClickHandler","flowGraphLeaveHandler","flowGraphMouseenterHandler","flowDetailLeaveHandler","flowDetailEnterHandler","highlightModel","g","flowNodes","includes","temp","initModelGraph","modelClickHandler","flowNodeIndex","foundModelNode","splice","currentFlow","getElementById","innerHTML","on","initEvent","initFlowGraph","excution","render","_vm","_h","$createElement","_c","_self","attrs","$t","staticStyle","model","value","callback","$$v","expression","_l","key","_v","_s","procInstName","createdTime","operator","directives","name","rawName","procDefId","procDefName","getTargetOptions","key_name","staticClass","excutionFlow","_e","$event","workFlowActionHandler","staticRenderFns","injectStyle","context","__vue_template_functional__","__vue_styles__","__vue_scopeId__","__vue_module_identifier__","Component"],"mappings":"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","file":"js/chunk-302a80f1.f28231d3.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-536b27d0\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../../node_modules/sass-loader/lib/loader.js!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./workflow-execution.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-loader/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1a1155f1\", content, true, {});","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body[data-v-536b27d0]{color:#15a043}.graph-container[data-v-536b27d0]{overflow:auto}#flow_graph_detail[data-v-536b27d0],#model_graph_detail[data-v-536b27d0]{display:none;width:600px;position:absolute;background-color:#fff;padding:5px;-webkit-box-shadow:0 0 5px grey;box-shadow:0 0 5px grey;overflow:auto}\", \"\"]);\n\n// exports\n","export const addEvent = (selector, type, fn) => {\n  let nodesEl = document.querySelectorAll(selector);\n  let length = nodesEl.length;\n  // const func = e => {\n  //   fn(e);\n  // };\n  for (let i = 0; i < length; i++) {\n    let node = nodesEl[i];\n    node.removeEventListener(type, fn);\n    node.addEventListener(type, fn);\n  }\n};\nexport const removeEvent = (selector, type, fn) => {\n  let nodesEl = document.querySelectorAll(selector);\n  let length = nodesEl.length;\n  // const func = e => {\n  //   fn(e);\n  // };\n  for (let i = 0; i < length; i++) {\n    let node = nodesEl[i];\n    node.removeEventListener(type, fn);\n  }\n};\n","<template>\n  <div>\n    <Card dis-hover>\n      <Row>\n        <Col span=\"20\">\n          <Form label-position=\"left\">\n            <FormItem :label-width=\"150\" :label=\"$t('orchs')\">\n              <Select\n                v-model=\"selectedFlowInstance\"\n                style=\"width:70%\"\n                filterable\n              >\n                <Option\n                  v-for=\"item in allFlowInstances\"\n                  :value=\"item.id\"\n                  :key=\"item.id\"\n                >\n                  {{\n                    item.procInstName +\n                      \" \" +\n                      (item.createdTime || \"createdTime\") +\n                      \" \" +\n                      (item.operator || \"operator\")\n                  }}\n                </Option>\n              </Select>\n              <Button type=\"info\" @click=\"queryHandler\">{{\n                $t(\"query_orch\")\n              }}</Button>\n              <Button type=\"success\" @click=\"createHandler\">{{\n                $t(\"create_orch\")\n              }}</Button>\n            </FormItem>\n          </Form>\n        </Col>\n      </Row>\n      <Row\n        v-show=\"isShowBody\"\n        style=\"border:1px solid #ebe7e7;border-radius:3px; padding:20px\"\n      >\n        <Row>\n          <Form>\n            <Col span=\"6\">\n              <FormItem :label-width=\"100\" :label=\"$t('select_orch')\">\n                <Select\n                  label\n                  v-model=\"selectedFlow\"\n                  :disabled=\"isEnqueryPage\"\n                  @on-change=\"orchestrationSelectHandler\"\n                  @on-open-change=\"getAllFlow\"\n                  filterable\n                >\n                  <Option\n                    v-for=\"item in allFlows\"\n                    :value=\"item.procDefId\"\n                    :key=\"item.procDefId\"\n                    >{{ item.procDefName + \" \" + item.createdTime }}</Option\n                  >\n                </Select>\n              </FormItem>\n            </Col>\n            <Col span=\"8\">\n              <FormItem :label-width=\"100\" :label=\"$t('target_object')\">\n                <Select\n                  label\n                  v-model=\"selectedTarget\"\n                  :disabled=\"isEnqueryPage\"\n                  @on-change=\"onTargetSelectHandler\"\n                  @on-open-change=\"getTargetOptions\"\n                  filterable\n                >\n                  <Option\n                    v-for=\"item in allTarget\"\n                    :value=\"item.id\"\n                    :key=\"item.id\"\n                    >{{ item.key_name }}</Option\n                  >\n                </Select>\n              </FormItem>\n            </Col>\n          </Form>\n        </Row>\n        <Row style=\"border:1px solid #d3cece;border-radius:3px; padding:20px\">\n          <Col\n            span=\"6\"\n            style=\"border-right:1px solid #d3cece; text-align: center\"\n          >\n            <div class=\"graph-container\" id=\"flow\"></div>\n            <div style=\"text-align: center;margin-top: 60px;\">\n              <Button v-if=\"showExcution\" type=\"info\" @click=\"excutionFlow\">{{\n                $t(\"execute\")\n              }}</Button>\n            </div>\n          </Col>\n          <Col\n            span=\"18\"\n            style=\"text-align: center;margin-top: 60px;text-align: center\"\n          >\n            <div class=\"graph-container\" id=\"graph\"></div>\n          </Col>\n        </Row>\n      </Row>\n    </Card>\n    <Modal\n      :title=\"$t('select_an_operation')\"\n      v-model=\"workflowActionModalVisible\"\n      :footer-hide=\"true\"\n      :mask-closable=\"false\"\n      :scrollable=\"true\"\n    >\n      <div\n        class=\"workflowActionModal-container\"\n        style=\"text-align: center;margin-top: 20px;\"\n      >\n        <Button type=\"info\" @click=\"workFlowActionHandler('retry')\">\n          {{ $t(\"retry\") }}\n        </Button>\n        <Button\n          type=\"info\"\n          @click=\"workFlowActionHandler('skip')\"\n          style=\"margin-left: 20px\"\n          >{{ $t(\"skip\") }}</Button\n        >\n      </div>\n    </Modal>\n    <div id=\"model_graph_detail\">\n      <highlight-code lang=\"json\">{{ modelNodeDetail }}</highlight-code>\n    </div>\n    <div id=\"flow_graph_detail\">\n      <highlight-code lang=\"json\">{{ flowNodeDetail }}</highlight-code>\n    </div>\n  </div>\n</template>\n<script>\nimport {\n  getAllFlow,\n  getFlowOutlineByID,\n  getTargetOptions,\n  getTreePreviewData,\n  createFlowInstance,\n  getProcessInstances,\n  getProcessInstance,\n  retryProcessInstance,\n  getModelNodeDetail,\n  getNodeBindings,\n  getNodeContext\n} from \"@/api/server\";\nimport * as d3 from \"d3-selection\";\nimport * as d3Graphviz from \"d3-graphviz\";\nimport { addEvent, removeEvent } from \"../util/event.js\";\nexport default {\n  data() {\n    return {\n      graph: {},\n      flowGraph: {},\n      modelData: [],\n      flowData: {},\n      allFlowInstances: [],\n      allFlows: [],\n      allTarget: [],\n      currentFlowNodeId: \"\",\n      foundRefAry: [],\n      selectedFlowInstance: \"\",\n      selectedFlow: \"\",\n      selectedTarget: \"\",\n      showExcution: true,\n      isShowBody: false,\n      isEnqueryPage: false,\n      workflowActionModalVisible: false,\n      currentFailedNodeID: \"\",\n      timer: null,\n      modelNodeDetail: {},\n      flowNodeDetail: {},\n      modelDetailTimer: null,\n      flowNodesBindings: [],\n      flowDetailTimer: null\n    };\n  },\n  mounted() {\n    this.getProcessInstances();\n    this.getAllFlow();\n  },\n  destroyed() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n  methods: {\n    async getProcessInstances(\n      isAfterCreate = false,\n      createResponse = undefined\n    ) {\n      let { status, data, message } = await getProcessInstances();\n      if (status === \"OK\") {\n        this.allFlowInstances = data.sort((a, b) => {\n          return b.id - a.id;\n        });\n        if (isAfterCreate) {\n          this.selectedFlowInstance = createResponse.id;\n          this.processInstance();\n        }\n      }\n    },\n    async getNodeBindings(id) {\n      const { status, message, data } = await getNodeBindings(id);\n      if (status === \"OK\") {\n        this.flowNodesBindings = data;\n      }\n    },\n    async getAllFlow() {\n      let { status, data, message } = await getAllFlow(false);\n      if (status === \"OK\") {\n        this.allFlows = data.sort((a, b) => {\n          let s = a.createdTime.toLowerCase();\n          let t = b.createdTime.toLowerCase();\n          if (s > t) return -1;\n          if (s < t) return 1;\n        });\n      }\n    },\n\n    orchestrationSelectHandler() {\n      this.getFlowOutlineData(this.selectedFlow);\n      if (this.selectedFlow && this.isEnqueryPage === false) {\n        this.showExcution = true;\n      }\n    },\n    async getTargetOptions() {\n      if (!(this.flowData.rootEntity || this.flowData.entityTypeId)) return;\n      let pkgName = \"\";\n      let entityName = \"\";\n      if (this.flowData.rootEntity) {\n        pkgName = this.flowData.rootEntity.split(\":\")[0];\n        entityName = this.flowData.rootEntity.split(\":\")[1];\n      } else {\n        pkgName = this.flowData.entityTypeId.split(\":\")[0];\n        entityName = this.flowData.entityTypeId.split(\":\")[1];\n      }\n      let { status, data, message } = await getTargetOptions(\n        pkgName,\n        entityName\n      );\n      if (status === \"OK\") {\n        this.allTarget = data;\n      }\n    },\n    queryHandler() {\n      clearInterval(this.timer);\n      this.timer = null;\n      if (!this.selectedFlowInstance) return;\n      this.isShowBody = true;\n      this.isEnqueryPage = true;\n\n      this.$nextTick(async () => {\n        const found = this.allFlowInstances.find(\n          _ => _.id === this.selectedFlowInstance\n        );\n        this.getNodeBindings(found.id);\n        let { status, data, message } = await getProcessInstance(\n          found && found.id\n        );\n        if (status === \"OK\") {\n          this.flowData = {\n            ...data,\n            flowNodes: data.taskNodeInstances\n          };\n          this.getTargetOptions();\n\n          this.initFlowGraph(true);\n          removeEvent(\".retry\", \"click\", this.retryHandler);\n          addEvent(\".retry\", \"click\", this.retryHandler);\n          d3.selectAll(\".retry\").attr(\"cursor\", \"pointer\");\n\n          this.showExcution = false;\n        }\n\n        this.selectedFlow = found.procDefId;\n        this.selectedTarget = found.entityDataId;\n        this.getModelData();\n      });\n    },\n    createHandler() {\n      clearInterval(this.timer);\n      this.timer = null;\n      this.isShowBody = true;\n      this.isEnqueryPage = false;\n      this.selectedFlowInstance = \"\";\n      this.selectedTarget = \"\";\n      this.selectedFlow = \"\";\n      this.modelData = [];\n      this.flowData = {};\n      this.showExcution = false;\n      this.$nextTick(() => {\n        this.initModelGraph();\n      });\n    },\n    onTargetSelectHandler() {\n      this.getModelData();\n    },\n    formatNodesBindings() {\n      let bindings = this.flowNodesBindings.map(_ => {\n        const found = this.flowData.flowNodes.find(\n          i => i.nodeDefId === _.nodeDefId\n        );\n        return {\n          ..._,\n          orderedNo: found ? found.orderedNo : \"\"\n        };\n      });\n      this.modelData.forEach(item => {\n        this.flowNodesBindings.forEach(d => {\n          if (d.entityTypeId + \":\" + d.entityDataId === item.id) {\n            item.refFlowNodeIds.push(d.orderedNo);\n          }\n        });\n      });\n    },\n    async getModelData() {\n      if (!this.selectedFlow || !this.selectedTarget) return;\n      let { status, data, message } = await getTreePreviewData(\n        this.selectedFlow,\n        this.selectedTarget\n      );\n      if (status === \"OK\") {\n        this.modelData = data.map(_ => {\n          return {\n            ..._,\n            refFlowNodeIds: []\n          };\n        });\n        if (this.isEnqueryPage) {\n          this.formatNodesBindings();\n        }\n        this.initModelGraph();\n      }\n    },\n    async getFlowOutlineData(id) {\n      let { status, data, message } = await getFlowOutlineByID(id);\n      if (status === \"OK\") {\n        this.flowData = data;\n        this.initFlowGraph();\n        this.getTargetOptions();\n      }\n    },\n    renderModelGraph() {\n      let nodes = this.modelData.map((_, index) => {\n        const nodeId = _.packageName + \"_\" + _.entityName + \"_\" + _.dataId;\n        let color = _.isHighlight ? \"#5DB400\" : \"black\";\n        const isRecord = _.refFlowNodeIds.length > 0;\n        const shape = isRecord ? \"Mrecord\" : \"ellipse\";\n        const label =\n          _.refFlowNodeIds.toString().replace(/,/g, \"/\") +\n          (isRecord ? \"|\" : \"\") +\n          _.packageName.slice(0, 5) +\n          \"...\" +\n          _.entityName.slice(-5);\n        return `${nodeId} [label=\"${\n          isRecord\n            ? label\n            : _.packageName.slice(0, 5) + \"...\" + _.entityName.slice(-5)\n        }\" class=\"model\" id=\"${nodeId}\" color=\"${color}\" style=\"filled\" fillcolor=\"white\" shape=\"${shape}\"]`;\n      });\n      let genEdge = () => {\n        let pathAry = [];\n\n        this.modelData.forEach(_ => {\n          if (_.succeedingIds.length > 0) {\n            const nodeId = _.packageName + \"_\" + _.entityName + \"_\" + _.dataId;\n            let current = [];\n            current = _.succeedingIds.map(to => {\n              return nodeId + \" -> \" + to.replace(/:/g, \"_\");\n            });\n            pathAry.push(current);\n          }\n        });\n        return pathAry\n          .flat()\n          .toString()\n          .replace(/,/g, \";\");\n      };\n      let nodesToString =\n        Array.isArray(nodes) && nodes.length > 0\n          ? nodes.toString().replace(/,/g, \";\") + \";\"\n          : \"\";\n\n      let nodesString =\n        \"digraph G { \" +\n        'bgcolor=\"transparent\";' +\n        'Node [fontname=Arial, shape=\"ellipse\", fixedsize=\"true\", width=\"1.6\", height=\".8\",fontsize=12];' +\n        'Edge [fontname=Arial, minlen=\"1\", color=\"#7f8fa6\", fontsize=10];' +\n        nodesToString +\n        genEdge() +\n        \"}\";\n      this.graph.graphviz.renderDot(nodesString);\n      removeEvent(\n        \".model text\",\n        \"mouseenter\",\n        this.modelGraphMouseenterHandler\n      );\n      removeEvent(\n        \".model text\",\n        \"mouseleave\",\n        this.modelGraphMouseleaveHandler\n      );\n      addEvent(\".model text\", \"mouseenter\", this.modelGraphMouseenterHandler);\n      addEvent(\".model text\", \"mouseleave\", this.modelGraphMouseleaveHandler);\n    },\n    modelGraphMouseenterHandler(e) {\n      clearTimeout(this.modelDetailTimer);\n      this.modelDetailTimer = setTimeout(async () => {\n        const found = this.modelData.find(\n          _ =>\n            _.packageName + \"_\" + _.entityName + \"_\" + _.dataId ===\n            e.target.parentNode.id\n        );\n        let modelDetail = document.getElementById(\"model_graph_detail\");\n        let el = e || window.event;\n        let x = el.clientX;\n        let y = el.clientY;\n        const { status, message, data } = await getModelNodeDetail(\n          found.entityName,\n          found.dataId\n        );\n        if (status === \"OK\") {\n          this.modelNodeDetail = data;\n        }\n        let clientWidth = document.body.clientWidth;\n        const positionX =\n          clientWidth - x < 600 ? x - 600 + 5 + \"px\" : x + 5 + \"px\";\n        modelDetail.style.display = \"block\";\n        modelDetail.style.left = positionX;\n        modelDetail.style.top = y + \"px\";\n        removeEvent(\n          \"#model_graph_detail\",\n          \"mouseenter\",\n          this.modelDetailEnterHandler\n        );\n        removeEvent(\n          \"#model_graph_detail\",\n          \"mouseleave\",\n          this.modelDetailLeaveHandler\n        );\n        addEvent(\n          \"#model_graph_detail\",\n          \"mouseenter\",\n          this.modelDetailEnterHandler\n        );\n        addEvent(\n          \"#model_graph_detail\",\n          \"mouseleave\",\n          this.modelDetailLeaveHandler\n        );\n      }, 500);\n    },\n    modelDetailEnterHandler(e) {\n      let modelDetail = document.getElementById(\"model_graph_detail\");\n      modelDetail.style.display = \"block\";\n    },\n    modelDetailLeaveHandler(e) {\n      let modelDetail = document.getElementById(\"model_graph_detail\");\n      modelDetail.style.display = \"none\";\n    },\n    modelGraphMouseleaveHandler(e) {\n      clearTimeout(this.modelDetailTimer);\n      this.modelDetailLeaveHandler(e);\n    },\n    renderFlowGraph(excution) {\n      const statusColor = {\n        Completed: \"#5DB400\",\n        deployed: \"#7F8A96\",\n        InProgress: \"#3C83F8\",\n        Faulted: \"#FF6262\",\n        Timeouted: \"#F7B500\",\n        NotStarted: \"#7F8A96\"\n      };\n      let nodes =\n        this.flowData &&\n        this.flowData.flowNodes &&\n        this.flowData.flowNodes\n          .filter(i => i.status != \"predeploy\")\n          .map((_, index) => {\n            if (_.nodeType === \"startEvent\" || _.nodeType === \"endEvent\") {\n              return `${_.nodeId} [label=\"${_.nodeName ||\n                \"Null\"}\", fontsize=\"10\", class=\"flow\",style=\"${\n                excution ? \"filled\" : \"none\"\n              }\" color=\"${\n                excution ? statusColor[_.status] : \"#7F8A96\"\n              }\" shape=\"circle\", id=\"${_.nodeId}\"]`;\n            } else {\n              const className =\n                _.status === \"Faulted\" || _.status === \"Timeouted\"\n                  ? \"retry\"\n                  : \"\";\n              return `${_.nodeId} [fixedsize=false label=\"${_.orderedNo +\n                \"、\" +\n                _.nodeName}\" class=\"flow ${className}\" style=\"${\n                excution ? \"filled\" : \"none\"\n              }\" color=\"${\n                excution\n                  ? statusColor[_.status]\n                  : _.nodeId === this.currentFlowNodeId\n                  ? \"#5DB400\"\n                  : \"#7F8A96\"\n              }\"  shape=\"box\" id=\"${_.nodeId}\" ]`;\n            }\n          });\n      let genEdge = () => {\n        let pathAry = [];\n        this.flowData &&\n          this.flowData.flowNodes &&\n          this.flowData.flowNodes.forEach(_ => {\n            if (_.succeedingNodeIds.length > 0) {\n              let current = [];\n              current = _.succeedingNodeIds.map(to => {\n                return (\n                  _.nodeId +\n                  \" -> \" +\n                  `${to} [color=\"${\n                    excution ? statusColor[_.status] : \"black\"\n                  }\"]`\n                );\n              });\n              pathAry.push(current);\n            }\n          });\n        return pathAry\n          .flat()\n          .toString()\n          .replace(/,/g, \";\");\n      };\n      let nodesToString = Array.isArray(nodes)\n        ? nodes.toString().replace(/,/g, \";\") + \";\"\n        : \"\";\n      let nodesString =\n        \"digraph G {\" +\n        'bgcolor=\"transparent\";' +\n        'Node [fontname=Arial, height=\".3\", fontsize=12];' +\n        'Edge [fontname=Arial, color=\"#7f8fa6\", fontsize=10];' +\n        nodesToString +\n        genEdge() +\n        \"}\";\n\n      this.flowGraph.graphviz.renderDot(nodesString);\n      this.bindFlowEvent();\n    },\n    async excutionFlow() {\n      // 区分已存在的flowInstance执行 和 新建的执行\n      if (this.isEnqueryPage) {\n        this.processInstance();\n        this.showExcution = false;\n      } else {\n        const currentTarget = this.allTarget.find(\n          _ => _.id === this.selectedTarget\n        );\n        let taskNodeBinds = [];\n        this.modelData.forEach(_ => {\n          let temp = [];\n          _.refFlowNodeIds.forEach(i => {\n            temp.push({\n              ..._,\n              flowOrderNo: i\n            });\n          });\n          taskNodeBinds = taskNodeBinds.concat(temp);\n        });\n\n        let payload = {\n          entityDataId: currentTarget.id,\n          entityTypeId: this.flowData.rootEntity,\n          procDefId: this.flowData.procDefId,\n          taskNodeBinds: taskNodeBinds.map(_ => {\n            const node = this.flowData.flowNodes.find(\n              node => node.orderedNo === _.flowOrderNo\n            );\n            return {\n              entityDataId: _.dataId,\n              entityTypeId: this.flowData.rootEntity,\n              nodeDefId: (node && node.nodeDefId) || \"\",\n              orderedNo: _.flowOrderNo\n            };\n          })\n        };\n        let { status, data, message } = await createFlowInstance(payload);\n        if (status === \"OK\") {\n          this.getProcessInstances(true, data);\n          this.showExcution = false;\n          this.isEnqueryPage = true;\n        }\n      }\n    },\n    start() {\n      if (this.timer === null) {\n        this.getStatus();\n      }\n      if (this.timer != null) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n      this.timer = setInterval(() => {\n        this.getStatus();\n      }, 5000);\n    },\n    stop() {\n      clearInterval(this.timer);\n      this.timer = null;\n    },\n    async getStatus() {\n      const found = this.allFlowInstances.find(\n        _ => _.id === this.selectedFlowInstance\n      );\n      let { status, data, message } = await getProcessInstance(\n        found && found.id\n      );\n      if (status === \"OK\") {\n        this.flowData = {\n          ...data,\n          flowNodes: data.taskNodeInstances\n        };\n        this.initFlowGraph(true);\n        removeEvent(\".retry\", \"click\", this.retryHandler);\n        addEvent(\".retry\", \"click\", this.retryHandler);\n        d3.selectAll(\".retry\").attr(\"cursor\", \"pointer\");\n        if (data.status === \"Completed\") {\n          this.stop();\n        }\n      }\n    },\n    processInstance() {\n      this.timer = null;\n      this.start();\n    },\n    retryHandler(e) {\n      debugger;\n      this.currentFailedNodeID = e.target.parentNode.getAttribute(\"id\");\n      this.workflowActionModalVisible = true;\n    },\n    async workFlowActionHandler(type) {\n      const found = this.flowData.flowNodes.find(\n        _ => _.nodeId === this.currentFailedNodeID\n      );\n      if (!found) {\n        return;\n      }\n      const payload = {\n        act: type,\n        nodeInstId: found.id,\n        procInstId: found.procInstId\n      };\n      const { data, message, status } = await retryProcessInstance(payload);\n      if (status === \"OK\") {\n        this.$Notice.success({\n          title: \"Success\",\n          desc:\n            (type === \"retry\" ? \"Retry\" : \"Skip\") +\n            \" action is proceed successfully\"\n        });\n        this.workflowActionModalVisible = false;\n        this.processInstance();\n      }\n    },\n    bindFlowEvent() {\n      if (this.isEnqueryPage !== true) {\n        addEvent(\".flow\", \"mouseover\", e => {\n          e.preventDefault();\n          e.stopPropagation();\n          d3.selectAll(\"g\").attr(\"cursor\", \"pointer\");\n        });\n        removeEvent(\".flow\", \"click\", this.flowNodesClickHandler);\n        addEvent(\".flow\", \"click\", this.flowNodesClickHandler);\n      } else {\n        removeEvent(\n          \".flow text\",\n          \"mouseenter\",\n          this.flowGraphMouseenterHandler\n        );\n        removeEvent(\".flow text\", \"mouseleave\", this.flowGraphLeaveHandler);\n        addEvent(\".flow text\", \"mouseenter\", this.flowGraphMouseenterHandler);\n        addEvent(\".flow text\", \"mouseleave\", this.flowGraphLeaveHandler);\n      }\n    },\n    flowGraphLeaveHandler(e) {\n      clearTimeout(this.flowDetailTimer);\n      this.flowDetailLeaveHandler();\n    },\n    flowGraphMouseenterHandler(e) {\n      clearTimeout(this.flowDetailTimer);\n      this.flowDetailTimer = setTimeout(async () => {\n        const found = this.flowData.flowNodes.find(\n          _ => _.nodeId === e.target.parentNode.id\n        );\n        let flowDetail = document.getElementById(\"flow_graph_detail\");\n        let el = e || window.event;\n        let x = el.clientX;\n        let y = el.clientY;\n        const { status, message, data } = await getNodeContext(\n          found.procInstId,\n          found.id\n        );\n        if (status === \"OK\") {\n          this.flowNodeDetail = data;\n        }\n        let clientWidth = document.body.clientWidth;\n        const positionX =\n          clientWidth - x < 600 ? x - 600 + 5 + \"px\" : x + 5 + \"px\";\n        flowDetail.style.display = \"block\";\n        flowDetail.style.left = positionX;\n        flowDetail.style.top = y + \"px\";\n        removeEvent(\n          \"#flow_graph_detail\",\n          \"mouseenter\",\n          this.flowDetailEnterHandler\n        );\n        removeEvent(\n          \"#flow_graph_detail\",\n          \"mouseleave\",\n          this.flowDetailLeaveHandler\n        );\n        addEvent(\n          \"#flow_graph_detail\",\n          \"mouseenter\",\n          this.flowDetailEnterHandler\n        );\n        addEvent(\n          \"#flow_graph_detail\",\n          \"mouseleave\",\n          this.flowDetailLeaveHandler\n        );\n      }, 500);\n    },\n    flowDetailEnterHandler(e) {\n      let modelDetail = document.getElementById(\"flow_graph_detail\");\n      modelDetail.style.display = \"block\";\n    },\n    flowDetailLeaveHandler(e) {\n      let modelDetail = document.getElementById(\"flow_graph_detail\");\n      modelDetail.style.display = \"none\";\n    },\n    flowNodesClickHandler(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      let g = e.currentTarget;\n      this.highlightModel(g.id);\n      this.currentFlowNodeId = g.id;\n      this.renderFlowGraph();\n    },\n    highlightModel(nodeId) {\n      let temp = [];\n\n      this.foundRefAry = this.flowData.flowNodes\n        .find(item => item.nodeId == nodeId)\n        .routineExpression.split(/[~.>()]/)\n        .filter(i => i.length > 0);\n      this.modelData.forEach(item => {\n        item[\"isHighlight\"] = this.foundRefAry[\n          this.foundRefAry.length - 1\n        ].includes(item.entityName);\n        this.foundRefAry.forEach(i => {\n          if (item.id.includes(i)) {\n            temp.push(\n              item.packageName + \"_\" + item.entityName + \"_\" + item.dataId\n            );\n          }\n        });\n      });\n      this.initModelGraph();\n      removeEvent(\".model\", \"click\", this.modelClickHandler);\n      temp.forEach(_ => {\n        // replace ':' by _'\n        addEvent(`#${_}`, \"click\", this.modelClickHandler);\n      });\n    },\n    modelClickHandler(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      let g = e.currentTarget;\n      let temp = [];\n      let foundModelNode = this.modelData.find(\n        _ => _.packageName + \"_\" + _.entityName + \"_\" + _.dataId === g.id\n      );\n      const currentFlow = this.flowData.flowNodes.find(\n        i => i.nodeId === this.currentFlowNodeId\n      );\n      this.modelData.forEach(item => {\n        this.foundRefAry.forEach(i => {\n          if (item.id.includes(i)) {\n            temp.push(\n              item.packageName + \"_\" + item.entityName + \"_\" + item.dataId\n            );\n          }\n        });\n      });\n      const flowNodeIndex = foundModelNode.refFlowNodeIds.indexOf(\n        currentFlow.orderedNo\n      );\n      if (flowNodeIndex > -1) {\n        foundModelNode.refFlowNodeIds.splice(flowNodeIndex, 1);\n      } else {\n        foundModelNode.refFlowNodeIds.push(currentFlow.orderedNo);\n      }\n      document.getElementById(\"graph\").innerHTML = \"\";\n      this.initModelGraph();\n      temp.forEach(_ => {\n        addEvent(`#${_}`, \"click\", this.modelClickHandler);\n      });\n    },\n    initModelGraph() {\n      const initEvent = () => {\n        let graph;\n        graph = d3.select(`#graph`);\n        graph.on(\"dblclick.zoom\", null);\n        this.graph.graphviz = graph.graphviz().zoom(false);\n      };\n      initEvent();\n      this.renderModelGraph();\n    },\n    initFlowGraph(excution = false) {\n      const initEvent = () => {\n        let graph;\n        graph = d3.select(`#flow`);\n        graph.on(\"dblclick.zoom\", null);\n        this.flowGraph.graphviz = graph.graphviz().zoom(false);\n      };\n      initEvent();\n      this.renderFlowGraph(excution);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\nbody {\n  color: #15a043;\n}\n.graph-container {\n  overflow: auto;\n}\n#model_graph_detail {\n  display: none;\n  width: 600px;\n  position: absolute;\n  background-color: white;\n  padding: 5px 5px;\n  box-shadow: 0 0 5px grey;\n  overflow: auto;\n}\n#flow_graph_detail {\n  display: none;\n  width: 600px;\n  position: absolute;\n  background-color: white;\n  padding: 5px 5px;\n  box-shadow: 0 0 5px grey;\n  overflow: auto;\n}\n</style>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Card',{attrs:{\"dis-hover\":\"\"}},[_c('Row',[_c('Col',{attrs:{\"span\":\"20\"}},[_c('Form',{attrs:{\"label-position\":\"left\"}},[_c('FormItem',{attrs:{\"label-width\":150,\"label\":_vm.$t('orchs')}},[_c('Select',{staticStyle:{\"width\":\"70%\"},attrs:{\"filterable\":\"\"},model:{value:(_vm.selectedFlowInstance),callback:function ($$v) {_vm.selectedFlowInstance=$$v},expression:\"selectedFlowInstance\"}},_vm._l((_vm.allFlowInstances),function(item){return _c('Option',{key:item.id,attrs:{\"value\":item.id}},[_vm._v(\"\\n                \"+_vm._s(item.procInstName +\n                    \" \" +\n                    (item.createdTime || \"createdTime\") +\n                    \" \" +\n                    (item.operator || \"operator\"))+\"\\n              \")])}),1),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"info\"},on:{\"click\":_vm.queryHandler}},[_vm._v(_vm._s(_vm.$t(\"query_orch\")))]),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.createHandler}},[_vm._v(_vm._s(_vm.$t(\"create_orch\")))])],1)],1)],1)],1),_vm._v(\" \"),_c('Row',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowBody),expression:\"isShowBody\"}],staticStyle:{\"border\":\"1px solid #ebe7e7\",\"border-radius\":\"3px\",\"padding\":\"20px\"}},[_c('Row',[_c('Form',[_c('Col',{attrs:{\"span\":\"6\"}},[_c('FormItem',{attrs:{\"label-width\":100,\"label\":_vm.$t('select_orch')}},[_c('Select',{attrs:{\"label\":\"\",\"disabled\":_vm.isEnqueryPage,\"filterable\":\"\"},on:{\"on-change\":_vm.orchestrationSelectHandler,\"on-open-change\":_vm.getAllFlow},model:{value:(_vm.selectedFlow),callback:function ($$v) {_vm.selectedFlow=$$v},expression:\"selectedFlow\"}},_vm._l((_vm.allFlows),function(item){return _c('Option',{key:item.procDefId,attrs:{\"value\":item.procDefId}},[_vm._v(_vm._s(item.procDefName + \" \" + item.createdTime))])}),1)],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"8\"}},[_c('FormItem',{attrs:{\"label-width\":100,\"label\":_vm.$t('target_object')}},[_c('Select',{attrs:{\"label\":\"\",\"disabled\":_vm.isEnqueryPage,\"filterable\":\"\"},on:{\"on-change\":_vm.onTargetSelectHandler,\"on-open-change\":_vm.getTargetOptions},model:{value:(_vm.selectedTarget),callback:function ($$v) {_vm.selectedTarget=$$v},expression:\"selectedTarget\"}},_vm._l((_vm.allTarget),function(item){return _c('Option',{key:item.id,attrs:{\"value\":item.id}},[_vm._v(_vm._s(item.key_name))])}),1)],1)],1)],1)],1),_vm._v(\" \"),_c('Row',{staticStyle:{\"border\":\"1px solid #d3cece\",\"border-radius\":\"3px\",\"padding\":\"20px\"}},[_c('Col',{staticStyle:{\"border-right\":\"1px solid #d3cece\",\"text-align\":\"center\"},attrs:{\"span\":\"6\"}},[_c('div',{staticClass:\"graph-container\",attrs:{\"id\":\"flow\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\",\"margin-top\":\"60px\"}},[(_vm.showExcution)?_c('Button',{attrs:{\"type\":\"info\"},on:{\"click\":_vm.excutionFlow}},[_vm._v(_vm._s(_vm.$t(\"execute\")))]):_vm._e()],1)]),_vm._v(\" \"),_c('Col',{staticStyle:{\"text-align\":\"center\",\"margin-top\":\"60px\"},attrs:{\"span\":\"18\"}},[_c('div',{staticClass:\"graph-container\",attrs:{\"id\":\"graph\"}})])],1)],1)],1),_vm._v(\" \"),_c('Modal',{attrs:{\"title\":_vm.$t('select_an_operation'),\"footer-hide\":true,\"mask-closable\":false,\"scrollable\":true},model:{value:(_vm.workflowActionModalVisible),callback:function ($$v) {_vm.workflowActionModalVisible=$$v},expression:\"workflowActionModalVisible\"}},[_c('div',{staticClass:\"workflowActionModal-container\",staticStyle:{\"text-align\":\"center\",\"margin-top\":\"20px\"}},[_c('Button',{attrs:{\"type\":\"info\"},on:{\"click\":function($event){return _vm.workFlowActionHandler('retry')}}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"retry\"))+\"\\n      \")]),_vm._v(\" \"),_c('Button',{staticStyle:{\"margin-left\":\"20px\"},attrs:{\"type\":\"info\"},on:{\"click\":function($event){return _vm.workFlowActionHandler('skip')}}},[_vm._v(_vm._s(_vm.$t(\"skip\")))])],1)]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"model_graph_detail\"}},[_c('highlight-code',{attrs:{\"lang\":\"json\"}},[_vm._v(_vm._s(_vm.modelNodeDetail))])],1),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"flow_graph_detail\"}},[_c('highlight-code',{attrs:{\"lang\":\"json\"}},[_vm._v(_vm._s(_vm.flowNodeDetail))])],1)],1)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","function injectStyle (context) {\n  require(\"!!vue-loader/node_modules/vue-style-loader!css-loader?minimize!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-536b27d0\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!sass-loader!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./workflow-execution.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./workflow-execution.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./workflow-execution.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-536b27d0\\\",\\\"hasScoped\\\":true,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./workflow-execution.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-536b27d0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n"],"sourceRoot":""}