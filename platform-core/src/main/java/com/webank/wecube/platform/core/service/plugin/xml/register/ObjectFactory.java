//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.11.09 at 03:29:54 PM CST 
//


package com.webank.wecube.platform.core.service.plugin.xml.register;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.webank.wecube.platform.core package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Package_QNAME = new QName("", "package");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.webank.wecube.platform.core
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link PackageType }
     * 
     */
    public PackageType createPackageType() {
        return new PackageType();
    }

    /**
     * Create an instance of {@link MenusType }
     * 
     */
    public MenusType createMenusType() {
        return new MenusType();
    }

    /**
     * Create an instance of {@link SystemParametersType }
     * 
     */
    public SystemParametersType createSystemParametersType() {
        return new SystemParametersType();
    }

    /**
     * Create an instance of {@link DockerType }
     * 
     */
    public DockerType createDockerType() {
        return new DockerType();
    }

    /**
     * Create an instance of {@link OutputParametersType }
     * 
     */
    public OutputParametersType createOutputParametersType() {
        return new OutputParametersType();
    }

    /**
     * Create an instance of {@link S3Type }
     * 
     */
    public S3Type createS3Type() {
        return new S3Type();
    }

    /**
     * Create an instance of {@link InterfaceType }
     * 
     */
    public InterfaceType createInterfaceType() {
        return new InterfaceType();
    }

    /**
     * Create an instance of {@link AttributeType }
     * 
     */
    public AttributeType createAttributeType() {
        return new AttributeType();
    }

    /**
     * Create an instance of {@link MysqlType }
     * 
     */
    public MysqlType createMysqlType() {
        return new MysqlType();
    }

    /**
     * Create an instance of {@link PackageDependencyType }
     * 
     */
    public PackageDependencyType createPackageDependencyType() {
        return new PackageDependencyType();
    }

    /**
     * Create an instance of {@link OutputParameterType }
     * 
     */
    public OutputParameterType createOutputParameterType() {
        return new OutputParameterType();
    }

    /**
     * Create an instance of {@link PluginType }
     * 
     */
    public PluginType createPluginType() {
        return new PluginType();
    }

    /**
     * Create an instance of {@link EntityType }
     * 
     */
    public EntityType createEntityType() {
        return new EntityType();
    }

    /**
     * Create an instance of {@link AuthorityType }
     * 
     */
    public AuthorityType createAuthorityType() {
        return new AuthorityType();
    }

    /**
     * Create an instance of {@link ResourceDependenciesType }
     * 
     */
    public ResourceDependenciesType createResourceDependenciesType() {
        return new ResourceDependenciesType();
    }

    /**
     * Create an instance of {@link SystemParameterType }
     * 
     */
    public SystemParameterType createSystemParameterType() {
        return new SystemParameterType();
    }

    /**
     * Create an instance of {@link PluginsType }
     * 
     */
    public PluginsType createPluginsType() {
        return new PluginsType();
    }

    /**
     * Create an instance of {@link DataModelType }
     * 
     */
    public DataModelType createDataModelType() {
        return new DataModelType();
    }

    /**
     * Create an instance of {@link InputParameterType }
     * 
     */
    public InputParameterType createInputParameterType() {
        return new InputParameterType();
    }

    /**
     * Create an instance of {@link InputParametersType }
     * 
     */
    public InputParametersType createInputParametersType() {
        return new InputParametersType();
    }

    /**
     * Create an instance of {@link PackageDependenciesType }
     * 
     */
    public PackageDependenciesType createPackageDependenciesType() {
        return new PackageDependenciesType();
    }

    /**
     * Create an instance of {@link RoleBindType }
     * 
     */
    public RoleBindType createRoleBindType() {
        return new RoleBindType();
    }

    /**
     * Create an instance of {@link RoleBindsType }
     * 
     */
    public RoleBindsType createRoleBindsType() {
        return new RoleBindsType();
    }

    /**
     * Create an instance of {@link MenuType }
     * 
     */
    public MenuType createMenuType() {
        return new MenuType();
    }

    /**
     * Create an instance of {@link AuthoritiesType }
     * 
     */
    public AuthoritiesType createAuthoritiesType() {
        return new AuthoritiesType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PackageType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "package")
    public JAXBElement<PackageType> createPackage(PackageType value) {
        return new JAXBElement<PackageType>(_Package_QNAME, PackageType.class, null, value);
    }

}
