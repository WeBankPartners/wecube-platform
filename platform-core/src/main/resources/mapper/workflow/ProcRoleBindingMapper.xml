<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
    namespace="com.webank.wecube.platform.core.repository.workflow.ProcRoleBindingMapper">
    <resultMap id="BaseResultMap"
        type="com.webank.wecube.platform.core.entity.workflow.ProcRoleBindingEntity">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="proc_id" jdbcType="VARCHAR" property="procId" />
        <result column="role_id" jdbcType="VARCHAR" property="roleId" />
        <result column="role_name" jdbcType="VARCHAR" property="roleName" />
        <result column="permission" jdbcType="VARCHAR" property="permission" />
    </resultMap>
    <sql id="Base_Column_List">
        id, proc_id, role_id, role_name, permission
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_role_binding
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from
        core_ru_proc_role_binding
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert"
        parameterType="com.webank.wecube.platform.core.entity.workflow.ProcRoleBindingEntity">
        insert into core_ru_proc_role_binding (id,
        proc_id, role_id,
        role_name, permission)
        values
        (#{id,jdbcType=VARCHAR}, #{procId,jdbcType=VARCHAR},
        #{roleId,jdbcType=VARCHAR},
        #{roleName,jdbcType=VARCHAR},
        #{permission,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective"
        parameterType="com.webank.wecube.platform.core.entity.workflow.ProcRoleBindingEntity">
        insert into core_ru_proc_role_binding
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="procId != null">
                proc_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="permission != null">
                permission,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="procId != null">
                #{procId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                #{permission,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
        parameterType="com.webank.wecube.platform.core.entity.workflow.ProcRoleBindingEntity">
        update core_ru_proc_role_binding
        <set>
            <if test="procId != null">
                proc_id = #{procId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                permission = #{permission,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey"
        parameterType="com.webank.wecube.platform.core.entity.workflow.ProcRoleBindingEntity">
        update core_ru_proc_role_binding
        set proc_id =
        #{procId,jdbcType=VARCHAR},
        role_id = #{roleId,jdbcType=VARCHAR},
        role_name = #{roleName,jdbcType=VARCHAR},
        permission =
        #{permission,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectAllByRoleName" parameterType="java.lang.String"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_role_binding
        where role_name =
        #{roleName,jdbcType=VARCHAR}
    </select>

    <select id="selectAllByRoleNameAndPermission" parameterType="java.lang.String"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_role_binding
        where role_name =
        #{roleName,jdbcType=VARCHAR}
        and permission =
        #{permission,jdbcType=VARCHAR}
    </select>

    <select id="selectAllByProcId" parameterType="java.lang.String"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_role_binding
        where proc_id =
        #{procId,jdbcType=VARCHAR}
    </select>

    <select id="selectByProcIdAndRoleNameAndPermission"
        parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_role_binding
        where proc_id =
        #{procId,jdbcType=VARCHAR}
        and role_name =
        #{roleName,jdbcType=VARCHAR}
        and permission =
        #{permission,jdbcType=VARCHAR}

    </select>

    <select id="selectAllByProcIdAndPermission" parameterType="java.lang.String"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_role_binding
        where proc_id =
        #{procId,jdbcType=VARCHAR}
        and permission =
        #{permission,jdbcType=VARCHAR}
    </select>

    <select id="selectDistinctProcIdByRolesAndPermissionIsUse"
        parameterType="list" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List" />
        from core_ru_proc_role_binding
        where permission = 'USE'
        and
        role_name in
        <foreach item="roleName" collection="roleNames" separator=","
            open="(" close=")" index="">
            #{roleName, jdbcType=VARCHAR}
        </foreach>
    </select>

    <delete id="deleteByProcIdAndRoleAndPermission"
        parameterType="java.lang.String">
        delete from
        core_ru_proc_role_binding
        where proc_id
        = #{procId,jdbcType=VARCHAR}
        and role_name =
        #{roleName,jdbcType=VARCHAR}
        and permission =
        #{permission,jdbcType=VARCHAR}

    </delete>

</mapper>