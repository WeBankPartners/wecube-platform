<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
    namespace="com.webank.wecube.platform.core.repository.workflow.ProcExecBindingMapper">
    <resultMap id="BaseResultMap"
        type="com.webank.wecube.platform.core.entity.workflow.ProcExecBindingEntity">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="created_time" jdbcType="TIMESTAMP"
            property="createdTime" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="updated_time" jdbcType="TIMESTAMP"
            property="updatedTime" />
        <result column="bind_type" jdbcType="VARCHAR" property="bindType" />
        <result column="entity_id" jdbcType="VARCHAR" property="entityId" />
        <result column="node_def_id" jdbcType="VARCHAR" property="nodeDefId" />
        <result column="proc_def_id" jdbcType="VARCHAR" property="procDefId" />
        <result column="proc_inst_id" jdbcType="INTEGER"
            property="procInstId" />
        <result column="task_node_inst_id" jdbcType="INTEGER"
            property="taskNodeInstId" />
        <result column="entity_data_id" jdbcType="VARCHAR"
            property="entityDataId" />
        <result column="entity_type_id" jdbcType="VARCHAR"
            property="entityTypeId" />
        <result column="entity_data_name" jdbcType="VARCHAR"
            property="entityDataName" />
        <result column="bind_flag" jdbcType="CHAR" property="bindFlag" />
        <result column="full_data_id" jdbcType="VARCHAR"
            property="fullEntityDataId" />
        <result column="confirm_token" jdbcType="VARCHAR"
            property="confirmToken" />
    </resultMap>
    <sql id="Base_Column_List">
        id, created_by, created_time, updated_by, updated_time,
        bind_type,
        entity_id, node_def_id,
        proc_def_id, proc_inst_id,
        task_node_inst_id, entity_data_id, entity_type_id,
        entity_data_name,bind_flag,full_data_id,confirm_token
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_exec_binding
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from
        core_ru_proc_exec_binding
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
        parameterType="com.webank.wecube.platform.core.entity.workflow.ProcExecBindingEntity">
        insert into core_ru_proc_exec_binding (id,
        created_by, created_time,
        updated_by, updated_time, bind_type,
        entity_id, node_def_id, proc_def_id,
        proc_inst_id,
        task_node_inst_id, entity_data_id,
        entity_type_id,
        entity_data_name,
        bind_flag,full_data_id,confirm_token)
        values (#{id,jdbcType=INTEGER},
        #{createdBy,jdbcType=VARCHAR},
        #{createdTime,jdbcType=TIMESTAMP},
        #{updatedBy,jdbcType=VARCHAR},
        #{updatedTime,jdbcType=TIMESTAMP}, #{bindType,jdbcType=VARCHAR},
        #{entityId,jdbcType=VARCHAR}, #{nodeDefId,jdbcType=VARCHAR},
        #{procDefId,jdbcType=VARCHAR},
        #{procInstId,jdbcType=INTEGER},
        #{taskNodeInstId,jdbcType=INTEGER},
        #{entityDataId,jdbcType=VARCHAR},
        #{entityTypeId,jdbcType=VARCHAR},
        #{entityDataName,jdbcType=VARCHAR},
        #{bindFlag,jdbcType=CHAR},
        #{fullEntityDataId,jdbcType=VARCHAR},
        #{confirmToken,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true"
        keyProperty="id"
        parameterType="com.webank.wecube.platform.core.entity.workflow.ProcExecBindingEntity">
        insert into core_ru_proc_exec_binding
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
            <if test="bindType != null">
                bind_type,
            </if>
            <if test="entityId != null">
                entity_id,
            </if>
            <if test="nodeDefId != null">
                node_def_id,
            </if>
            <if test="procDefId != null">
                proc_def_id,
            </if>
            <if test="procInstId != null">
                proc_inst_id,
            </if>
            <if test="taskNodeInstId != null">
                task_node_inst_id,
            </if>
            <if test="entityDataId != null">
                entity_data_id,
            </if>
            <if test="entityTypeId != null">
                entity_type_id,
            </if>
            <if test="entityDataName != null">
                entity_data_name,
            </if>
            <if test="bindFlag != null">
                bind_flag,
            </if>
            <if test="fullEntityDataId != null">
                full_data_id,
            </if>
            <if test="confirmToken != null">
                confirm_token,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="bindType != null">
                #{bindType,jdbcType=VARCHAR},
            </if>
            <if test="entityId != null">
                #{entityId,jdbcType=VARCHAR},
            </if>
            <if test="nodeDefId != null">
                #{nodeDefId,jdbcType=VARCHAR},
            </if>
            <if test="procDefId != null">
                #{procDefId,jdbcType=VARCHAR},
            </if>
            <if test="procInstId != null">
                #{procInstId,jdbcType=INTEGER},
            </if>
            <if test="taskNodeInstId != null">
                #{taskNodeInstId,jdbcType=INTEGER},
            </if>
            <if test="entityDataId != null">
                #{entityDataId,jdbcType=VARCHAR},
            </if>
            <if test="entityTypeId != null">
                #{entityTypeId,jdbcType=VARCHAR},
            </if>
            <if test="entityDataName != null">
                #{entityDataName,jdbcType=VARCHAR},
            </if>
            <if test="bindFlag != null">
                #{bindFlag,jdbcType=CHAR},
            </if>
            <if test="fullEntityDataId != null">
                #{fullEntityDataId,jdbcType=VARCHAR},
            </if>
            <if test="confirmToken != null">
                #{confirmToken,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
        parameterType="com.webank.wecube.platform.core.entity.workflow.ProcExecBindingEntity">
        update core_ru_proc_exec_binding
        <set>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time =
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                updated_time =
                #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="bindType != null">
                bind_type = #{bindType,jdbcType=VARCHAR},
            </if>
            <if test="entityId != null">
                entity_id = #{entityId,jdbcType=VARCHAR},
            </if>
            <if test="nodeDefId != null">
                node_def_id = #{nodeDefId,jdbcType=VARCHAR},
            </if>
            <if test="procDefId != null">
                proc_def_id = #{procDefId,jdbcType=VARCHAR},
            </if>
            <if test="procInstId != null">
                proc_inst_id = #{procInstId,jdbcType=INTEGER},
            </if>
            <if test="taskNodeInstId != null">
                task_node_inst_id =
                #{taskNodeInstId,jdbcType=INTEGER},
            </if>
            <if test="entityDataId != null">
                entity_data_id =
                #{entityDataId,jdbcType=VARCHAR},
            </if>
            <if test="entityTypeId != null">
                entity_type_id =
                #{entityTypeId,jdbcType=VARCHAR},
            </if>
            <if test="entityDataName != null">
                entity_data_name =
                #{entityDataName,jdbcType=VARCHAR},
            </if>
            <if test="bindFlag != null">
                bind_flag =
                #{bindFlag,jdbcType=CHAR},
            </if>
            <if test="fullEntityDataId != null">
                full_data_id =
                #{fullEntityDataId,jdbcType=VARCHAR},
            </if>
            <if test="confirmToken != null">
                confirm_token =
                #{confirmToken,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
        parameterType="com.webank.wecube.platform.core.entity.workflow.ProcExecBindingEntity">
        update core_ru_proc_exec_binding
        set created_by =
        #{createdBy,jdbcType=VARCHAR},
        created_time =
        #{createdTime,jdbcType=TIMESTAMP},
        updated_by =
        #{updatedBy,jdbcType=VARCHAR},
        updated_time =
        #{updatedTime,jdbcType=TIMESTAMP},
        bind_type =
        #{bindType,jdbcType=VARCHAR},
        entity_id =
        #{entityId,jdbcType=VARCHAR},
        node_def_id =
        #{nodeDefId,jdbcType=VARCHAR},
        proc_def_id =
        #{procDefId,jdbcType=VARCHAR},
        proc_inst_id =
        #{procInstId,jdbcType=INTEGER},
        task_node_inst_id =
        #{taskNodeInstId,jdbcType=INTEGER},
        entity_data_id =
        #{entityDataId,jdbcType=VARCHAR},
        entity_type_id =
        #{entityTypeId,jdbcType=VARCHAR},
        entity_data_name =
        #{entityDataName,jdbcType=VARCHAR},
        bind_flag =
        #{bindFlag,jdbcType=VARCHAR},
        full_data_id =
        #{fullEntityDataId,jdbcType=VARCHAR},
        confirm_token =
        #{confirmToken,jdbcType=VARCHAR}
        where id =
        #{id,jdbcType=INTEGER}
    </update>

    <select id="selectAllTaskNodeBindings" parameterType="java.lang.Integer"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_exec_binding
        where proc_inst_id =
        #{procInstId,jdbcType=INTEGER}
        and bind_type = 'taskNode'
        and
        task_node_inst_id =
        #{nodeInstId,jdbcType=INTEGER}
    </select>

    <select id="selectProcInstBindings" parameterType="java.lang.Integer"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_exec_binding
        where proc_inst_id =
        #{procInstId,jdbcType=INTEGER}
        and bind_type = 'process'
    </select>

    <select id="selectAllTaskNodeBindingsByProcInstId"
        parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_exec_binding
        where proc_inst_id =
        #{procInstId,jdbcType=INTEGER}
        and bind_type = 'taskNode'
    </select>

    <select id="selectAllBoundTaskNodeBindings" parameterType="java.lang.Integer"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_exec_binding
        where proc_inst_id =
        #{procInstId,jdbcType=INTEGER}
        and bind_type = 'taskNode'
        and
        task_node_inst_id =
        #{nodeInstId,jdbcType=INTEGER}
        and
        (bind_flag
        != 'N' OR bind_flag IS NULL OR bind_flag = '')
    </select>

    <delete id="deleteAllTaskNodeBindings">
        delete
        from
        core_ru_proc_exec_binding
        where
        proc_inst_id =
        #{procInstId,jdbcType=INTEGER}
        and bind_type =
        'taskNode'
        and
        task_node_inst_id =
        #{nodeInstId,jdbcType=INTEGER}

    </delete>

    <select id="selectAllBoundRunningProcInstances"
        parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT DISTINCT
        t1.proc_inst_id
        FROM
        core_ru_proc_exec_binding t1,
        core_ru_proc_inst_info t2
        WHERE
        t1.bind_type = 'taskNode'
        AND t2.id
        = t1.proc_inst_id
        AND
        t2.status != 'Completed'
        AND t2.status !=
        'InternallyTerminated'
        AND t2.status !=
        'NotStarted'
        AND
        t1.entity_data_id =
        #{entityDataId,jdbcType=VARCHAR}
    </select>

    <select id="countAllBoundRunningProcInstances" parameterType="java.lang.String"
        resultType="int">
        SELECT count(*)
        FROM
        core_ru_proc_exec_binding t1,
        core_ru_proc_inst_info t2
        WHERE
        t1.bind_type = 'taskNode'
        AND t2.id
        = t1.proc_inst_id
        AND t2.status != 'Completed'
        AND t2.status !=
        'InternallyTerminated'
        AND t2.status !=
        'NotStarted'
        AND
        t1.entity_data_id = #{entityDataId,jdbcType=VARCHAR}
    </select>

    <select id="selectAllExclusiveBoundRunningProcInstances"
        parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT DISTINCT
        t1.proc_inst_id
        FROM
        core_ru_proc_exec_binding t1,
        core_ru_proc_inst_info t2,
        core_re_proc_def_info t3
        WHERE
        t1.bind_type = 'taskNode'
        AND t2.id
        = t1.proc_inst_id
        AND t2.status
        != 'Completed'
        AND t2.status !=
        'InternallyTerminated'
        AND
        t2.status !=
        'NotStarted'
        AND t3.id =
        t1.proc_def_id
        AND
        t3.exclude_mode = 'Y'
        AND t1.entity_data_id =
        #{entityDataId,jdbcType=VARCHAR}
    </select>

    <select id="countAllExclusiveBoundRunningProcInstances"
        parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*)
        FROM
        core_ru_proc_exec_binding t1,
        core_ru_proc_inst_info t2,
        core_re_proc_def_info t3
        WHERE
        t1.bind_type = 'taskNode'
        AND t2.id
        = t1.proc_inst_id
        AND
        t2.status != 'Completed'
        AND t2.status !=
        'InternallyTerminated'
        AND t2.status !=
        'NotStarted'
        AND t3.id =
        t1.proc_def_id
        AND
        t3.exclude_mode = 'Y'
        AND t1.entity_data_id =
        #{entityDataId,jdbcType=VARCHAR}
    </select>

    <select id="selectAllBoundRunningProcInstancesWithoutProcInst"
        resultType="java.lang.Integer">
        SELECT DISTINCT
        t1.proc_inst_id
        FROM
        core_ru_proc_exec_binding t1,
        core_ru_proc_inst_info t2
        WHERE
        t1.bind_type = 'taskNode'
        AND t2.id = t1.proc_inst_id
        AND
        t2.status != 'Completed'
        AND t2.status != 'InternallyTerminated'
        AND t2.status !=
        'NotStarted'
        AND t1.entity_data_id =
        #{entityDataId,jdbcType=VARCHAR}
        AND
        t2.id !=
        #{procInstId,jdbcType=INTEGER}
    </select>

    <select id="countAllBoundRunningProcInstancesWithoutProcInst"
        resultType="java.lang.Integer">
        SELECT count(*)
        FROM
        core_ru_proc_exec_binding t1,
        core_ru_proc_inst_info t2
        WHERE
        t1.bind_type = 'taskNode'
        AND t2.id
        = t1.proc_inst_id
        AND t2.status != 'Completed'
        AND t2.status !=
        'InternallyTerminated'
        AND t2.status !=
        'NotStarted'
        AND
        t1.entity_data_id = #{entityDataId,jdbcType=VARCHAR}
        AND
        t2.id != #{procInstId,jdbcType=INTEGER}
    </select>

    <select id="selectAllExclusiveBoundRunningProcInstancesWithoutProcInst"
        resultType="java.lang.Integer">
        SELECT DISTINCT t1.proc_inst_id
        FROM
        core_ru_proc_exec_binding t1,
        core_ru_proc_inst_info t2,
        core_re_proc_def_info t3
        WHERE
        t1.bind_type = 'taskNode'
        AND t2.id
        = t1.proc_inst_id
        AND t2.status != 'Completed'
        AND t2.status !=
        'InternallyTerminated'
        AND t2.status !=
        'NotStarted'
        AND t3.id =
        t1.proc_def_id
        AND t3.exclude_mode = 'Y'
        AND t1.entity_data_id =
        #{entityDataId,jdbcType=VARCHAR}
        AND
        t2.id !=
        #{procInstId,jdbcType=INTEGER}
    </select>

    <select id="countAllExclusiveBoundRunningProcInstancesWithoutProcInst"
        resultType="java.lang.Integer">
        SELECT count(*)
        FROM
        core_ru_proc_exec_binding t1,
        core_ru_proc_inst_info t2,
        core_re_proc_def_info t3
        WHERE
        t1.bind_type = 'taskNode'
        AND t2.id = t1.proc_inst_id
        AND
        t2.status != 'Completed'
        AND t2.status != 'InternallyTerminated'
        AND t2.status !=
        'NotStarted'
        AND t3.id = t1.proc_def_id
        AND
        t3.exclude_mode = 'Y'
        AND t1.entity_data_id =
        #{entityDataId,jdbcType=VARCHAR}
        AND
        t2.id !=
        #{procInstId,jdbcType=INTEGER}
    </select>
    
    <select id="selectAllTaskNodeBindingsByNodeDef"
        parameterType="java.lang.String" resultType="com.webank.wecube.platform.core.entity.workflow.ProcExecBindingEntity">
        select DISTINCT
        entity_data_id,
        entity_data_name
        from core_ru_proc_exec_binding
        where node_def_id = #{nodeDefId,jdbcType=VARCHAR}
        and bind_type = 'taskNode'
        and
        (bind_flag
        != 'N' OR bind_flag IS NULL OR bind_flag = '')
    </select>
    
    <select id="selectAllProcExecBindingTasknodeStatistics"
        resultType="com.webank.wecube.platform.core.entity.workflow.ProcExecBindingTasknodeStatistics">
        SELECT DISTINCT DISTINCT
            t0.proc_def_id AS procDefId,
            procdef.proc_def_name AS procDefName,
            t0.node_def_id AS nodeDefId,
            nodedef.node_name AS nodeDefName,
            t0.entity_data_id AS entityDataId,
            t0.entity_data_name AS entityDataName,
            IFNULL(tmp1.successCount, 0) AS successCount,
            IFNULL(tmp2.failureCount, 0) AS failureCount
        FROM
            core_ru_proc_exec_binding t0
                LEFT JOIN
            (SELECT 
                t3.node_def_id AS node_def_id,
                    t1.entity_data_id AS entity_data_id,
                    COUNT(1) AS successCount
            FROM
                core_ru_task_node_exec_param t1, 
                core_ru_task_node_exec_req t2, 
                core_ru_task_node_inst_info t3
            WHERE
                t1.param_name = 'errorCode'
                    AND t1.param_type = 'OUTPUT'
                    AND t1.param_data_value = '0'
                    AND t1.req_id = t2.req_id
                    AND t2.node_inst_id = t3.id
                    <if test="startDate != null">
                    AND t1.created_time &gt;= #{startDate,jdbcType=TIMESTAMP}
                    </if>
                    <if test="endDate != null">
                    AND t1.created_time &lt;= #{endDate,jdbcType=TIMESTAMP}
                    </if>
            GROUP BY t3.node_def_id , t1.entity_data_id) tmp1 ON tmp1.node_def_id = t0.node_def_id
                AND tmp1.entity_data_id = t0.entity_data_id
                LEFT JOIN
            (SELECT 
                t3.node_def_id AS node_def_id,
                    t1.entity_data_id AS entity_data_id,
                    COUNT(1) AS failureCount
            FROM
                core_ru_task_node_exec_param t1, 
                core_ru_task_node_exec_req t2, 
                core_ru_task_node_inst_info t3
            WHERE
                t1.param_name = 'errorCode'
                    AND t1.param_type = 'OUTPUT'
                    AND t1.param_data_value != '0'
                    AND t1.req_id = t2.req_id
                    AND t2.node_inst_id = t3.id
                    <if test="startDate != null">
                    AND t1.created_time &gt;= #{startDate,jdbcType=TIMESTAMP}
                    </if>
                    <if test="endDate != null">
                    AND t1.created_time &lt;= #{endDate,jdbcType=TIMESTAMP}
                    </if>
            GROUP BY t3.node_def_id , t1.entity_data_id) tmp2 ON tmp2.node_def_id = t0.node_def_id
                AND tmp2.entity_data_id = t0.entity_data_id
                JOIN
            core_re_proc_def_info procdef ON procdef.id = t0.proc_def_id
                JOIN
            core_re_task_node_def_info nodedef ON nodedef.id = t0.node_def_id
        WHERE
            t0.bind_type = 'taskNode'
                AND (t0.bind_flag = 'Y'
                OR t0.bind_flag IS NULL
                OR t0.bind_flag = '')
            AND 
            t0.node_def_id IN 
            <foreach item="nodeDefId" collection="nodeDefIds" separator=","
            open="(" close=")" index="">
                #{nodeDefId, jdbcType=VARCHAR}
            </foreach>
            <if test="entityDataIds != null and entityDataIds.size() != 0">
            AND 
                t0.entity_data_id IN 
                <foreach item="entityDataId" collection="entityDataIds" separator=","
                open="(" close=")" index="">
                    #{entityDataId, jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="sortField != null and sortField != ''">
            ORDER BY ${sortField} ${sortType}
            </if>
        
    </select>
    
    <select id="selectAllProcExecBindingPluginStatistics"
        resultType="com.webank.wecube.platform.core.entity.workflow.ProcExecBindingPluginStatistics">
        SELECT DISTINCT
            tb2.service_id AS serviceId,
            tb1.entity_data_id AS entityDataId,
            tb1.entity_data_name AS entityDataName,
            IFNULL(tmp1.successCount, 0) AS successCount,
            IFNULL(tmp2.failureCount, 0) AS failureCount
        FROM
            core_ru_proc_exec_binding tb1
                JOIN
            core_re_task_node_def_info tb2 ON tb2.id = tb1.node_def_id
                LEFT JOIN
            (SELECT 
                t4.service_id AS service_id,
                    t1.entity_data_id AS entity_data_id,
                    COUNT(1) AS successCount
            FROM
                core_ru_task_node_exec_param t1, 
                core_ru_task_node_exec_req t2, 
                core_ru_task_node_inst_info t3, 
                core_re_task_node_def_info t4
            WHERE
                t1.param_name = 'errorCode'
                    AND t1.param_type = 'OUTPUT'
                    AND t1.param_data_value = '0'
                    AND t1.req_id = t2.req_id
                    AND t2.node_inst_id = t3.id
                    AND t3.node_def_id = t4.id
                    AND t4.status != 'draft'
                    <if test="startDate != null">
                    AND t1.created_time &gt;= #{startDate,jdbcType=TIMESTAMP}
                    </if>
                    <if test="endDate != null">
                    AND t1.created_time &lt;= #{endDate,jdbcType=TIMESTAMP}
                    </if>
            GROUP BY service_id , entity_data_id) tmp1 ON tmp1.service_id = tb2.service_id
                AND tmp1.entity_data_id = tb1.entity_data_id
                LEFT JOIN
            (SELECT 
                t4.service_id AS service_id,
                    t1.entity_data_id AS entity_data_id,
                    COUNT(1) AS failureCount
            FROM
                core_ru_task_node_exec_param t1, 
                core_ru_task_node_exec_req t2, 
                core_ru_task_node_inst_info t3, 
                core_re_task_node_def_info t4
            WHERE
                t1.param_name = 'errorCode'
                    AND t1.param_type = 'OUTPUT'
                    AND t1.param_data_value != '0'
                    AND t1.req_id = t2.req_id
                    AND t2.node_inst_id = t3.id
                    AND t3.node_def_id = t4.id
                    AND t4.status != 'draft'
                    <if test="startDate != null">
                    AND t1.created_time &gt;= #{startDate,jdbcType=TIMESTAMP}
                    </if>
                    <if test="endDate != null">
                    AND t1.created_time &lt;= #{endDate,jdbcType=TIMESTAMP}
                    </if>
            GROUP BY service_id , entity_data_id) tmp2 ON tmp2.service_id = tb2.service_id
                AND tmp2.entity_data_id = tb1.entity_data_id
        WHERE
            1 = 1
                AND (tb1.bind_flag = 'Y'
                OR tb1.bind_flag IS NULL
                OR tb1.bind_flag = '')
            AND
                tb2.service_id IN 
            <foreach item="serviceId" collection="serviceIds" separator=","
                    open="(" close=")" index="">
                    #{serviceId, jdbcType=VARCHAR}
            </foreach>
            <if test="entityDataIds != null and entityDataIds.size() != 0">
            AND 
            tb1.entity_data_id IN 
            <foreach item="entityDataId" collection="entityDataIds" separator=","
            open="(" close=")" index="">
                #{entityDataId, jdbcType=VARCHAR}
            </foreach>
            </if>
            <if test="sortField != null and sortField != ''">
            ORDER BY ${sortField} ${sortType}
            </if>
        
    </select>
    
    <select id="selectAllTaskNodeBindingsByProcInstIdAndDataId"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from core_ru_proc_exec_binding
        where proc_inst_id =
        #{procInstId,jdbcType=INTEGER}
        and bind_type = 'taskNode'
        and entity_data_id = #{entityDataId, jdbcType=VARCHAR}
    </select>
</mapper>