<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
    namespace="com.webank.wecube.platform.core.repository.plugin.PluginConfigInterfacesMapper">
    <resultMap id="BaseResultMap"
        type="com.webank.wecube.platform.core.entity.plugin.PluginConfigInterfaces">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="plugin_config_id" property="pluginConfigId"
            jdbcType="VARCHAR" />
        <result column="action" property="action" jdbcType="VARCHAR" />
        <result column="service_name" property="serviceName"
            jdbcType="VARCHAR" />
        <result column="service_display_name" property="serviceDisplayName"
            jdbcType="VARCHAR" />
        <result column="path" property="path" jdbcType="VARCHAR" />
        <result column="http_method" property="httpMethod"
            jdbcType="VARCHAR" />
        <result column="is_async_processing" property="isAsyncProcessing"
            jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="filter_rule" property="filterRule"
            jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="RichPluginConfigInterfacesResultMap"
        type="com.webank.wecube.platform.core.entity.plugin.RichPluginConfigInterfaces">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="plugin_config_id" property="pluginConfigId"
            jdbcType="VARCHAR" />
        <result column="action" property="action" jdbcType="VARCHAR" />
        <result column="service_name" property="serviceName"
            jdbcType="VARCHAR" />
        <result column="service_display_name" property="serviceDisplayName"
            jdbcType="VARCHAR" />
        <result column="path" property="path" jdbcType="VARCHAR" />
        <result column="http_method" property="httpMethod"
            jdbcType="VARCHAR" />
        <result column="is_async_processing" property="isAsyncProcessing"
            jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="filter_rule" property="filterRule"
            jdbcType="VARCHAR" />

        <result column="pluginConfigId" property="pluginConfigId"
            jdbcType="VARCHAR" />
        <result column="pluginConfigStatus" property="pluginConfigStatus"
            jdbcType="VARCHAR" />
        <result column="pluginPackageId" property="pluginPackageId"
            jdbcType="VARCHAR" />
        <result column="pluginPackageStatus" property="pluginPackageStatus"
            jdbcType="VARCHAR" />
        <result column="pluginPackageVersion" property="pluginPackageVersion"
            jdbcType="VARCHAR" />
    </resultMap>


    <sql id="Base_Column_List">
        id, plugin_config_id, action, service_name,
        service_display_name, path,
        http_method,
        is_async_processing,
        type, filter_rule
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
        parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from plugin_config_interfaces
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from
        plugin_config_interfaces
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert"
        parameterType="com.webank.wecube.platform.core.entity.plugin.PluginConfigInterfaces">
        insert into plugin_config_interfaces (id,
        plugin_config_id,
        action,
        service_name, service_display_name,
        path,
        http_method, is_async_processing, type,
        filter_rule)
        values
        (#{id,jdbcType=VARCHAR}, #{pluginConfigId,jdbcType=VARCHAR},
        #{action,jdbcType=VARCHAR},
        #{serviceName,jdbcType=VARCHAR},
        #{serviceDisplayName,jdbcType=VARCHAR},
        #{path,jdbcType=VARCHAR},
        #{httpMethod,jdbcType=VARCHAR},
        #{isAsyncProcessing,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
        #{filterRule,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective"
        parameterType="com.webank.wecube.platform.core.entity.plugin.PluginConfigInterfaces">
        insert into plugin_config_interfaces
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pluginConfigId != null">
                plugin_config_id,
            </if>
            <if test="action != null">
                action,
            </if>
            <if test="serviceName != null">
                service_name,
            </if>
            <if test="serviceDisplayName != null">
                service_display_name,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="httpMethod != null">
                http_method,
            </if>
            <if test="isAsyncProcessing != null">
                is_async_processing,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="filterRule != null">
                filter_rule,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="pluginConfigId != null">
                #{pluginConfigId,jdbcType=VARCHAR},
            </if>
            <if test="action != null">
                #{action,jdbcType=VARCHAR},
            </if>
            <if test="serviceName != null">
                #{serviceName,jdbcType=VARCHAR},
            </if>
            <if test="serviceDisplayName != null">
                #{serviceDisplayName,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="httpMethod != null">
                #{httpMethod,jdbcType=VARCHAR},
            </if>
            <if test="isAsyncProcessing != null">
                #{isAsyncProcessing,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="filterRule != null">
                #{filterRule,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
        parameterType="com.webank.wecube.platform.core.entity.plugin.PluginConfigInterfaces">
        update plugin_config_interfaces
        <set>
            <if test="pluginConfigId != null">
                plugin_config_id =
                #{pluginConfigId,jdbcType=VARCHAR},
            </if>
            <if test="action != null">
                action = #{action,jdbcType=VARCHAR},
            </if>
            <if test="serviceName != null">
                service_name = #{serviceName,jdbcType=VARCHAR},
            </if>
            <if test="serviceDisplayName != null">
                service_display_name =
                #{serviceDisplayName,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="httpMethod != null">
                http_method = #{httpMethod,jdbcType=VARCHAR},
            </if>
            <if test="isAsyncProcessing != null">
                is_async_processing =
                #{isAsyncProcessing,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="filterRule != null">
                filter_rule = #{filterRule,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey"
        parameterType="com.webank.wecube.platform.core.entity.plugin.PluginConfigInterfaces">
        update plugin_config_interfaces
        set
        plugin_config_id = #{pluginConfigId,jdbcType=VARCHAR},
        action =
        #{action,jdbcType=VARCHAR},
        service_name =
        #{serviceName,jdbcType=VARCHAR},
        service_display_name =
        #{serviceDisplayName,jdbcType=VARCHAR},
        path =
        #{path,jdbcType=VARCHAR},
        http_method =
        #{httpMethod,jdbcType=VARCHAR},
        is_async_processing =
        #{isAsyncProcessing,jdbcType=VARCHAR},
        type =
        #{type,jdbcType=VARCHAR},
        filter_rule =
        #{filterRule,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectAllByPluginConfig" resultMap="BaseResultMap"
        parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from plugin_config_interfaces
        where plugin_config_id =
        #{pluginConfigId,jdbcType=VARCHAR}
    </select>

    <select id="selectAllByServiceNameAndConfigStatus" resultMap="RichPluginConfigInterfacesResultMap">
        SELECT
        t1.id, t1.plugin_config_id, t1.action, t1.service_name,
        t1.service_display_name, t1.path,
        t1.http_method,
        t1.is_async_processing,
        t1.type, t1.filter_rule,
        t2.id AS
        pluginConfigId,
        t2.status AS pluginConfigStatus,
        t3.id AS
        pluginPackageId,
        t3.status AS pluginPackageStatus,
        t3.version AS
        pluginPackageVersion
        FROM
        plugin_config_interfaces t1,
        plugin_configs t2,
        plugin_packages t3
        WHERE
        t1.plugin_config_id =
        t2.id
        AND t2.plugin_package_id = t3.id
        AND t2.status =
        #{configStatus,jdbcType=VARCHAR}
        AND
        t1.service_name =
        #{serviceName,jdbcType=VARCHAR};
    </select>


    <select id="selectAllAuthorizedLatestEnabledIntfs"
        resultType="com.webank.wecube.platform.core.entity.plugin.AuthLatestEnabledInterfaces">
        SELECT DISTINCT
        t1.id AS id, t1.plugin_config_id AS
        pluginConfigId, t1.action AS action, t1.service_name AS
        serviceName,
        t1.service_display_name AS serviceDisplayName,
        t1.path AS path,
        t1.http_method AS httpMethod,
        t1.is_async_processing AS isAsyncProcessing,
        t1.type AS type,
        t1.filter_rule AS filterRule,
        t2.name AS pluginConfigName,
        t2.register_name AS pluginConfigRegisterName,
        t2.target_entity AS
        pluginConfigTargetEntity,
        t2.status AS pluginConfigStatus,
        t3.id
        AS pluginPackageId,
        t3.name AS pluginPackageName,
        t3.status AS
        pluginPackageStatus,
        t3.version AS pluginPackageVersion,
        t3.upload_timestamp AS
        uploadTimestamp
        FROM
        plugin_config_interfaces t1,
        plugin_configs
        t2,
        plugin_packages t3,
        plugin_config_roles t4
        WHERE
        t1.plugin_config_id = t2.id
        AND
        t2.status = #{pluginConfigStatus,jdbcType=VARCHAR}
        AND
        t2.plugin_package_id = t3.id
        AND
        t4.plugin_cfg_id = t2.id
        AND
        t4.perm_type = #{permissionType,jdbcType=VARCHAR}
        AND
        t4.role_name IN
        <foreach item="roleName" collection="roleNames"
            separator="," open="(" close=")" index="">
            #{roleName,
            jdbcType=VARCHAR}
        </foreach>
        AND
        t3.status IN
        <foreach item="pluginPackageStatus" collection="pluginPackageStatuses"
            separator="," open="(" close=")" index="">
            #{pluginPackageStatus, jdbcType=VARCHAR}
        </foreach>
    </select>


    <select id="selectAllAuthEnabledIntfsByTargetInfo"
        resultType="com.webank.wecube.platform.core.entity.plugin.AuthLatestEnabledInterfaces">
        SELECT DISTINCT
        t1.id AS id, t1.plugin_config_id AS
        pluginConfigId, t1.action AS action, t1.service_name AS
        serviceName,
        t1.service_display_name AS serviceDisplayName,
        t1.path AS path,
        t1.http_method AS httpMethod,
        t1.is_async_processing AS isAsyncProcessing,
        t1.type AS type,
        t1.filter_rule AS filterRule,
        t2.name AS pluginConfigName,
        t2.register_name AS pluginConfigRegisterName,
        t2.target_entity AS
        pluginConfigTargetEntity,
        t2.status AS pluginConfigStatus,
        t3.id
        AS pluginPackageId,
        t3.name AS pluginPackageName,
        t3.status AS
        pluginPackageStatus,
        t3.version AS pluginPackageVersion,
        t3.upload_timestamp AS
        uploadTimestamp
        FROM
        plugin_config_interfaces t1,
        plugin_configs
        t2,
        plugin_packages t3,
        plugin_config_roles t4
        WHERE
        t1.plugin_config_id = t2.id
        AND
        t2.status = #{pluginConfigStatus,jdbcType=VARCHAR}
        AND
        t2.plugin_package_id = t3.id
        AND
        t2.target_package =
        #{targetPackage,jdbcType=VARCHAR}
        AND
        t2.target_entity =
        #{targetEntity,jdbcType=VARCHAR}
        AND
        t4.plugin_cfg_id = t2.id
        AND
        t4.perm_type = #{permissionType,jdbcType=VARCHAR}
        AND
        t4.role_name IN
        <foreach item="roleName" collection="roleNames"
            separator="," open="(" close=")" index="">
            #{roleName,
            jdbcType=VARCHAR}
        </foreach>
        AND
        t3.status IN
        <foreach item="pluginPackageStatus" collection="pluginPackageStatuses"
            separator="," open="(" close=")" index="">
            #{pluginPackageStatus, jdbcType=VARCHAR}
        </foreach>
    </select>


    <select id="selectAllAuthEnabledIntfsByTargetInfoAndNullFilterRule"
        resultType="com.webank.wecube.platform.core.entity.plugin.AuthLatestEnabledInterfaces">
        SELECT DISTINCT
        t1.id AS id, t1.plugin_config_id AS
        pluginConfigId, t1.action AS action, t1.service_name AS
        serviceName,
        t1.service_display_name AS serviceDisplayName,
        t1.path AS path,
        t1.http_method AS httpMethod,
        t1.is_async_processing AS isAsyncProcessing,
        t1.type AS type,
        t1.filter_rule AS filterRule,
        t2.name AS pluginConfigName,
        t2.register_name AS pluginConfigRegisterName,
        t2.target_entity AS
        pluginConfigTargetEntity,
        t2.status AS pluginConfigStatus,
        t3.id
        AS pluginPackageId,
        t3.name AS pluginPackageName,
        t3.status AS
        pluginPackageStatus,
        t3.version AS pluginPackageVersion,
        t3.upload_timestamp AS
        uploadTimestamp
        FROM
        plugin_config_interfaces t1,
        plugin_configs
        t2,
        plugin_packages t3,
        plugin_config_roles t4
        WHERE
        t1.plugin_config_id = t2.id
        AND
        (t1.filter_rule IS NULL OR t1.filter_rule = '')
        AND
        t2.status =
        #{pluginConfigStatus,jdbcType=VARCHAR}
        AND
        t2.plugin_package_id =
        t3.id
        AND
        t2.target_package = #{targetPackage,jdbcType=VARCHAR}
        AND
        t2.target_entity = #{targetEntity,jdbcType=VARCHAR}
        AND
        t4.plugin_cfg_id = t2.id
        AND
        t4.perm_type =
        #{permissionType,jdbcType=VARCHAR}
        AND
        t4.role_name IN
        <foreach item="roleName" collection="roleNames"
            separator="," open="(" close=")" index="">
            #{roleName,
            jdbcType=VARCHAR}
        </foreach>
        AND
        t3.status IN
        <foreach item="pluginPackageStatus" collection="pluginPackageStatuses"
            separator="," open="(" close=")" index="">
            #{pluginPackageStatus, jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="selectAllAuthEnabledIntfsByTargetInfoAndFilterRule"
        resultType="com.webank.wecube.platform.core.entity.plugin.AuthLatestEnabledInterfaces">
        SELECT DISTINCT
        t1.id AS id, t1.plugin_config_id AS
        pluginConfigId, t1.action AS action, t1.service_name AS
        serviceName,
        t1.service_display_name AS serviceDisplayName,
        t1.path AS path,
        t1.http_method AS httpMethod,
        t1.is_async_processing AS isAsyncProcessing,
        t1.type AS type,
        t1.filter_rule AS filterRule,
        t2.name AS pluginConfigName,
        t2.register_name AS pluginConfigRegisterName,
        t2.target_entity AS
        pluginConfigTargetEntity,
        t2.status AS pluginConfigStatus,
        t3.id
        AS pluginPackageId,
        t3.name AS pluginPackageName,
        t3.status AS
        pluginPackageStatus,
        t3.version AS pluginPackageVersion,
        t3.upload_timestamp AS
        uploadTimestamp
        FROM
        plugin_config_interfaces t1,
        plugin_configs
        t2,
        plugin_packages t3,
        plugin_config_roles t4
        WHERE
        t1.plugin_config_id = t2.id
        AND
        t1.filter_rule = #{filterRule,jdbcType=VARCHAR}
        AND
        t2.status =
        #{pluginConfigStatus,jdbcType=VARCHAR}
        AND
        t2.plugin_package_id =
        t3.id
        AND
        t2.target_package = #{targetPackage,jdbcType=VARCHAR}
        AND
        t2.target_entity = #{targetEntity,jdbcType=VARCHAR}
        AND
        t4.plugin_cfg_id = t2.id
        AND
        t4.perm_type =
        #{permissionType,jdbcType=VARCHAR}
        AND
        t4.role_name IN
        <foreach item="roleName" collection="roleNames"
            separator="," open="(" close=")" index="">
            #{roleName,
            jdbcType=VARCHAR}
        </foreach>
        AND
        t3.status IN
        <foreach item="pluginPackageStatus" collection="pluginPackageStatuses"
            separator="," open="(" close=")" index="">
            #{pluginPackageStatus, jdbcType=VARCHAR}
        </foreach>
    </select>
    
    <select id="selectAllAuthEnabledIntfsByNullTargetInfo"
        resultType="com.webank.wecube.platform.core.entity.plugin.AuthLatestEnabledInterfaces">
        SELECT DISTINCT
        t1.id AS id, t1.plugin_config_id AS
        pluginConfigId, t1.action AS action, t1.service_name AS
        serviceName,
        t1.service_display_name AS serviceDisplayName,
        t1.path AS path,
        t1.http_method AS httpMethod,
        t1.is_async_processing AS isAsyncProcessing,
        t1.type AS type,
        t1.filter_rule AS filterRule,
        t2.name AS pluginConfigName,
        t2.register_name AS pluginConfigRegisterName,
        t2.target_entity AS
        pluginConfigTargetEntity,
        t2.status AS pluginConfigStatus,
        t3.id
        AS pluginPackageId,
        t3.name AS pluginPackageName,
        t3.status AS
        pluginPackageStatus,
        t3.version AS pluginPackageVersion,
        t3.upload_timestamp AS
        uploadTimestamp
        FROM
        plugin_config_interfaces t1,
        plugin_configs
        t2,
        plugin_packages t3,
        plugin_config_roles t4
        WHERE
        t1.plugin_config_id = t2.id
        AND
        t1.filter_rule = #{filterRule,jdbcType=VARCHAR}
        AND
        t2.status =
        #{pluginConfigStatus,jdbcType=VARCHAR}
        AND
        t2.plugin_package_id =
        t3.id
        AND
        ( t2.target_entity = '' OR t2.target_entity IS NULL)
        AND
        t4.plugin_cfg_id = t2.id
        AND
        t4.perm_type =
        #{permissionType,jdbcType=VARCHAR}
        AND
        t4.role_name IN
        <foreach item="roleName" collection="roleNames"
            separator="," open="(" close=")" index="">
            #{roleName,
            jdbcType=VARCHAR}
        </foreach>
        AND
        t3.status IN
        <foreach item="pluginPackageStatus" collection="pluginPackageStatuses"
            separator="," open="(" close=")" index="">
            #{pluginPackageStatus, jdbcType=VARCHAR}
        </foreach>
    </select>

</mapper>